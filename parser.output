Nonterminals useless in grammar

    return_statement


Terminals unused in grammar

    RETURN
    UNARY


Rules useless in grammar

   44 return_statement: RETURN expression SEMICOLON
   45                 | RETURN SEMICOLON


State 2 conflicts: 10 shift/reduce, 14 reduce/reduce
State 75 conflicts: 12 shift/reduce
State 79 conflicts: 1 shift/reduce
State 85 conflicts: 12 shift/reduce
State 89 conflicts: 11 shift/reduce, 13 reduce/reduce
State 92 conflicts: 11 shift/reduce, 13 reduce/reduce
State 93 conflicts: 11 shift/reduce, 13 reduce/reduce
State 97 conflicts: 11 shift/reduce, 13 reduce/reduce
State 106 conflicts: 11 shift/reduce, 13 reduce/reduce
State 107 conflicts: 11 shift/reduce, 13 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 function: FUNC IDENT LPAREN params RPAREN LCURLY statements RCURLY
    3         | FUNC IDENT LPAREN RPAREN LCURLY statements RCURLY
    4         | FUNC IDENT LPAREN RPAREN LCURLY RCURLY

    5 params: param
    6       | params COMMA param

    7 param: IDENT COLON type
    8      | VAR IDENT COLON type

    9 type: INT
   10     | FLOAT
   11     | CHAR
   12     | STRING

   13 statements: statements statement
   14           | ε

   15 statement: expression SEMICOLON
   16          | IF LPAREN expression RPAREN LCURLY statements RCURLY
   17          | IF LPAREN expression RPAREN LCURLY statements RCURLY ELSE LCURLY statements RCURLY
   18          | WHILE LPAREN expression RPAREN LCURLY statements RCURLY
   19          | FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN LCURLY statements RCURLY
   20          | function
   21          | ε

   22 expression: IDENT COLON type ASSIGN expression
   23           | VAR IDENT COLON type ASSIGN expression
   24           | IDENT DOT IDENT
   25           | IDENT LBRACKET expression RBRACKET
   26           | expression PLUS expression
   27           | expression MINUS expression
   28           | expression MULTIPLY expression
   29           | expression DIVIDE expression
   30           | expression EQ expression
   31           | expression NEQ expression
   32           | expression LT expression
   33           | expression LTE expression
   34           | expression GT expression
   35           | expression GTE expression
   36           | expression AND expression
   37           | expression OR expression
   38           | LPAREN expression RPAREN
   39           | IDENT
   40           | INTEGER
   41           | NUMBER
   42           | STR
   43           | ε


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IDENT (258) 2 3 4 7 8 22 23 24 25 39
    VAR (259) 8 23
    FUNC (260) 2 3 4
    INT <ival> (261) 9
    NUMBER <fval> (262) 41
    STR <sval> (263) 42
    CHAR (264) 11
    STRING (265) 12
    INTEGER (266) 40
    FLOAT (267) 10
    LPAREN (268) 2 3 4 16 17 18 19 38
    RPAREN (269) 2 3 4 16 17 18 19 38
    LCURLY (270) 2 3 4 16 17 18 19
    RCURLY (271) 2 3 4 16 17 18 19
    LBRACKET (272) 25
    RBRACKET (273) 25
    DOT (274) 24
    SEMICOLON (275) 15 19
    COLON (276) 7 8 22 23
    COMMA (277) 6
    PLUS (278) 26
    MINUS (279) 27
    MULTIPLY (280) 28
    DIVIDE (281) 29
    ASSIGN (282) 22 23
    IF (283) 16 17
    ELSE (284) 17
    WHILE (285) 18
    FOR (286) 19
    RETURN (287)
    OR (288) 37
    AND (289) 36
    EQ (290) 30
    NEQ (291) 31
    LT (292) 32
    GT (293) 34
    LTE (294) 33
    GTE (295) 35
    UNARY (296)


Nonterminals, with rules where they appear

    $accept (42)
        on left: 0
    program (43)
        on left: 1
        on right: 0
    function (44)
        on left: 2 3 4
        on right: 20
    params (45)
        on left: 5 6
        on right: 2 6
    param (46)
        on left: 7 8
        on right: 5 6
    type (47)
        on left: 9 10 11 12
        on right: 7 8 22 23
    statements (48)
        on left: 13 14
        on right: 1 2 3 13 16 17 18 19
    statement (49)
        on left: 15 16 17 18 19 20 21
        on right: 13
    expression (50)
        on left: 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43
        on right: 15 16 17 18 19 22 23 25 26 27 28 29 30 31 32 33 34 35 36 37 38


State 0

    0 $accept: • program $end

    $default  reduce using rule 14 (statements)

    program     go to state 1
    statements  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: statements •
   13 statements: statements • statement

    IDENT    shift, and go to state 4
    VAR      shift, and go to state 5
    FUNC     shift, and go to state 6
    NUMBER   shift, and go to state 7
    STR      shift, and go to state 8
    INTEGER  shift, and go to state 9
    LPAREN   shift, and go to state 10
    IF       shift, and go to state 11
    WHILE    shift, and go to state 12
    FOR      shift, and go to state 13

    $end       reduce using rule 1 (program)
    $end       [reduce using rule 21 (statement)]
    IDENT      [reduce using rule 21 (statement)]
    VAR        [reduce using rule 21 (statement)]
    FUNC       [reduce using rule 21 (statement)]
    NUMBER     [reduce using rule 21 (statement)]
    STR        [reduce using rule 21 (statement)]
    INTEGER    [reduce using rule 21 (statement)]
    LPAREN     [reduce using rule 21 (statement)]
    SEMICOLON  reduce using rule 21 (statement)
    SEMICOLON  [reduce using rule 43 (expression)]
    PLUS       reduce using rule 21 (statement)
    PLUS       [reduce using rule 43 (expression)]
    MINUS      reduce using rule 21 (statement)
    MINUS      [reduce using rule 43 (expression)]
    MULTIPLY   reduce using rule 21 (statement)
    MULTIPLY   [reduce using rule 43 (expression)]
    DIVIDE     reduce using rule 21 (statement)
    DIVIDE     [reduce using rule 43 (expression)]
    IF         [reduce using rule 21 (statement)]
    WHILE      [reduce using rule 21 (statement)]
    FOR        [reduce using rule 21 (statement)]
    OR         reduce using rule 21 (statement)
    OR         [reduce using rule 43 (expression)]
    AND        reduce using rule 21 (statement)
    AND        [reduce using rule 43 (expression)]
    EQ         reduce using rule 21 (statement)
    EQ         [reduce using rule 43 (expression)]
    NEQ        reduce using rule 21 (statement)
    NEQ        [reduce using rule 43 (expression)]
    LT         reduce using rule 21 (statement)
    LT         [reduce using rule 43 (expression)]
    GT         reduce using rule 21 (statement)
    GT         [reduce using rule 43 (expression)]
    LTE        reduce using rule 21 (statement)
    LTE        [reduce using rule 43 (expression)]
    GTE        reduce using rule 21 (statement)
    GTE        [reduce using rule 43 (expression)]
    $default   reduce using rule 21 (statement)

    function    go to state 14
    statement   go to state 15
    expression  go to state 16


State 3

    0 $accept: program $end •

    $default  accept


State 4

   22 expression: IDENT • COLON type ASSIGN expression
   24           | IDENT • DOT IDENT
   25           | IDENT • LBRACKET expression RBRACKET
   39           | IDENT •

    LBRACKET  shift, and go to state 17
    DOT       shift, and go to state 18
    COLON     shift, and go to state 19

    $default  reduce using rule 39 (expression)


State 5

   23 expression: VAR • IDENT COLON type ASSIGN expression

    IDENT  shift, and go to state 20


State 6

    2 function: FUNC • IDENT LPAREN params RPAREN LCURLY statements RCURLY
    3         | FUNC • IDENT LPAREN RPAREN LCURLY statements RCURLY
    4         | FUNC • IDENT LPAREN RPAREN LCURLY RCURLY

    IDENT  shift, and go to state 21


State 7

   41 expression: NUMBER •

    $default  reduce using rule 41 (expression)


State 8

   42 expression: STR •

    $default  reduce using rule 42 (expression)


State 9

   40 expression: INTEGER •

    $default  reduce using rule 40 (expression)


State 10

   38 expression: LPAREN • expression RPAREN

    IDENT    shift, and go to state 4
    VAR      shift, and go to state 5
    NUMBER   shift, and go to state 7
    STR      shift, and go to state 8
    INTEGER  shift, and go to state 9
    LPAREN   shift, and go to state 10

    $default  reduce using rule 43 (expression)

    expression  go to state 22


State 11

   16 statement: IF • LPAREN expression RPAREN LCURLY statements RCURLY
   17          | IF • LPAREN expression RPAREN LCURLY statements RCURLY ELSE LCURLY statements RCURLY

    LPAREN  shift, and go to state 23


State 12

   18 statement: WHILE • LPAREN expression RPAREN LCURLY statements RCURLY

    LPAREN  shift, and go to state 24


State 13

   19 statement: FOR • LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN LCURLY statements RCURLY

    LPAREN  shift, and go to state 25


State 14

   20 statement: function •

    $default  reduce using rule 20 (statement)


State 15

   13 statements: statements statement •

    $default  reduce using rule 13 (statements)


State 16

   15 statement: expression • SEMICOLON
   26 expression: expression • PLUS expression
   27           | expression • MINUS expression
   28           | expression • MULTIPLY expression
   29           | expression • DIVIDE expression
   30           | expression • EQ expression
   31           | expression • NEQ expression
   32           | expression • LT expression
   33           | expression • LTE expression
   34           | expression • GT expression
   35           | expression • GTE expression
   36           | expression • AND expression
   37           | expression • OR expression

    SEMICOLON  shift, and go to state 26
    PLUS       shift, and go to state 27
    MINUS      shift, and go to state 28
    MULTIPLY   shift, and go to state 29
    DIVIDE     shift, and go to state 30
    OR         shift, and go to state 31
    AND        shift, and go to state 32
    EQ         shift, and go to state 33
    NEQ        shift, and go to state 34
    LT         shift, and go to state 35
    GT         shift, and go to state 36
    LTE        shift, and go to state 37
    GTE        shift, and go to state 38


State 17

   25 expression: IDENT LBRACKET • expression RBRACKET

    IDENT    shift, and go to state 4
    VAR      shift, and go to state 5
    NUMBER   shift, and go to state 7
    STR      shift, and go to state 8
    INTEGER  shift, and go to state 9
    LPAREN   shift, and go to state 10

    $default  reduce using rule 43 (expression)

    expression  go to state 39


State 18

   24 expression: IDENT DOT • IDENT

    IDENT  shift, and go to state 40


State 19

   22 expression: IDENT COLON • type ASSIGN expression

    INT     shift, and go to state 41
    CHAR    shift, and go to state 42
    STRING  shift, and go to state 43
    FLOAT   shift, and go to state 44

    type  go to state 45


State 20

   23 expression: VAR IDENT • COLON type ASSIGN expression

    COLON  shift, and go to state 46


State 21

    2 function: FUNC IDENT • LPAREN params RPAREN LCURLY statements RCURLY
    3         | FUNC IDENT • LPAREN RPAREN LCURLY statements RCURLY
    4         | FUNC IDENT • LPAREN RPAREN LCURLY RCURLY

    LPAREN  shift, and go to state 47


State 22

   26 expression: expression • PLUS expression
   27           | expression • MINUS expression
   28           | expression • MULTIPLY expression
   29           | expression • DIVIDE expression
   30           | expression • EQ expression
   31           | expression • NEQ expression
   32           | expression • LT expression
   33           | expression • LTE expression
   34           | expression • GT expression
   35           | expression • GTE expression
   36           | expression • AND expression
   37           | expression • OR expression
   38           | LPAREN expression • RPAREN

    RPAREN    shift, and go to state 48
    PLUS      shift, and go to state 27
    MINUS     shift, and go to state 28
    MULTIPLY  shift, and go to state 29
    DIVIDE    shift, and go to state 30
    OR        shift, and go to state 31
    AND       shift, and go to state 32
    EQ        shift, and go to state 33
    NEQ       shift, and go to state 34
    LT        shift, and go to state 35
    GT        shift, and go to state 36
    LTE       shift, and go to state 37
    GTE       shift, and go to state 38


State 23

   16 statement: IF LPAREN • expression RPAREN LCURLY statements RCURLY
   17          | IF LPAREN • expression RPAREN LCURLY statements RCURLY ELSE LCURLY statements RCURLY

    IDENT    shift, and go to state 4
    VAR      shift, and go to state 5
    NUMBER   shift, and go to state 7
    STR      shift, and go to state 8
    INTEGER  shift, and go to state 9
    LPAREN   shift, and go to state 10

    $default  reduce using rule 43 (expression)

    expression  go to state 49


State 24

   18 statement: WHILE LPAREN • expression RPAREN LCURLY statements RCURLY

    IDENT    shift, and go to state 4
    VAR      shift, and go to state 5
    NUMBER   shift, and go to state 7
    STR      shift, and go to state 8
    INTEGER  shift, and go to state 9
    LPAREN   shift, and go to state 10

    $default  reduce using rule 43 (expression)

    expression  go to state 50


State 25

   19 statement: FOR LPAREN • expression SEMICOLON expression SEMICOLON expression RPAREN LCURLY statements RCURLY

    IDENT    shift, and go to state 4
    VAR      shift, and go to state 5
    NUMBER   shift, and go to state 7
    STR      shift, and go to state 8
    INTEGER  shift, and go to state 9
    LPAREN   shift, and go to state 10

    $default  reduce using rule 43 (expression)

    expression  go to state 51


State 26

   15 statement: expression SEMICOLON •

    $default  reduce using rule 15 (statement)


State 27

   26 expression: expression PLUS • expression

    IDENT    shift, and go to state 4
    VAR      shift, and go to state 5
    NUMBER   shift, and go to state 7
    STR      shift, and go to state 8
    INTEGER  shift, and go to state 9
    LPAREN   shift, and go to state 10

    $default  reduce using rule 43 (expression)

    expression  go to state 52


State 28

   27 expression: expression MINUS • expression

    IDENT    shift, and go to state 4
    VAR      shift, and go to state 5
    NUMBER   shift, and go to state 7
    STR      shift, and go to state 8
    INTEGER  shift, and go to state 9
    LPAREN   shift, and go to state 10

    $default  reduce using rule 43 (expression)

    expression  go to state 53


State 29

   28 expression: expression MULTIPLY • expression

    IDENT    shift, and go to state 4
    VAR      shift, and go to state 5
    NUMBER   shift, and go to state 7
    STR      shift, and go to state 8
    INTEGER  shift, and go to state 9
    LPAREN   shift, and go to state 10

    $default  reduce using rule 43 (expression)

    expression  go to state 54


State 30

   29 expression: expression DIVIDE • expression

    IDENT    shift, and go to state 4
    VAR      shift, and go to state 5
    NUMBER   shift, and go to state 7
    STR      shift, and go to state 8
    INTEGER  shift, and go to state 9
    LPAREN   shift, and go to state 10

    $default  reduce using rule 43 (expression)

    expression  go to state 55


State 31

   37 expression: expression OR • expression

    IDENT    shift, and go to state 4
    VAR      shift, and go to state 5
    NUMBER   shift, and go to state 7
    STR      shift, and go to state 8
    INTEGER  shift, and go to state 9
    LPAREN   shift, and go to state 10

    $default  reduce using rule 43 (expression)

    expression  go to state 56


State 32

   36 expression: expression AND • expression

    IDENT    shift, and go to state 4
    VAR      shift, and go to state 5
    NUMBER   shift, and go to state 7
    STR      shift, and go to state 8
    INTEGER  shift, and go to state 9
    LPAREN   shift, and go to state 10

    $default  reduce using rule 43 (expression)

    expression  go to state 57


State 33

   30 expression: expression EQ • expression

    IDENT    shift, and go to state 4
    VAR      shift, and go to state 5
    NUMBER   shift, and go to state 7
    STR      shift, and go to state 8
    INTEGER  shift, and go to state 9
    LPAREN   shift, and go to state 10

    $default  reduce using rule 43 (expression)

    expression  go to state 58


State 34

   31 expression: expression NEQ • expression

    IDENT    shift, and go to state 4
    VAR      shift, and go to state 5
    NUMBER   shift, and go to state 7
    STR      shift, and go to state 8
    INTEGER  shift, and go to state 9
    LPAREN   shift, and go to state 10

    $default  reduce using rule 43 (expression)

    expression  go to state 59


State 35

   32 expression: expression LT • expression

    IDENT    shift, and go to state 4
    VAR      shift, and go to state 5
    NUMBER   shift, and go to state 7
    STR      shift, and go to state 8
    INTEGER  shift, and go to state 9
    LPAREN   shift, and go to state 10

    $default  reduce using rule 43 (expression)

    expression  go to state 60


State 36

   34 expression: expression GT • expression

    IDENT    shift, and go to state 4
    VAR      shift, and go to state 5
    NUMBER   shift, and go to state 7
    STR      shift, and go to state 8
    INTEGER  shift, and go to state 9
    LPAREN   shift, and go to state 10

    $default  reduce using rule 43 (expression)

    expression  go to state 61


State 37

   33 expression: expression LTE • expression

    IDENT    shift, and go to state 4
    VAR      shift, and go to state 5
    NUMBER   shift, and go to state 7
    STR      shift, and go to state 8
    INTEGER  shift, and go to state 9
    LPAREN   shift, and go to state 10

    $default  reduce using rule 43 (expression)

    expression  go to state 62


State 38

   35 expression: expression GTE • expression

    IDENT    shift, and go to state 4
    VAR      shift, and go to state 5
    NUMBER   shift, and go to state 7
    STR      shift, and go to state 8
    INTEGER  shift, and go to state 9
    LPAREN   shift, and go to state 10

    $default  reduce using rule 43 (expression)

    expression  go to state 63


State 39

   25 expression: IDENT LBRACKET expression • RBRACKET
   26           | expression • PLUS expression
   27           | expression • MINUS expression
   28           | expression • MULTIPLY expression
   29           | expression • DIVIDE expression
   30           | expression • EQ expression
   31           | expression • NEQ expression
   32           | expression • LT expression
   33           | expression • LTE expression
   34           | expression • GT expression
   35           | expression • GTE expression
   36           | expression • AND expression
   37           | expression • OR expression

    RBRACKET  shift, and go to state 64
    PLUS      shift, and go to state 27
    MINUS     shift, and go to state 28
    MULTIPLY  shift, and go to state 29
    DIVIDE    shift, and go to state 30
    OR        shift, and go to state 31
    AND       shift, and go to state 32
    EQ        shift, and go to state 33
    NEQ       shift, and go to state 34
    LT        shift, and go to state 35
    GT        shift, and go to state 36
    LTE       shift, and go to state 37
    GTE       shift, and go to state 38


State 40

   24 expression: IDENT DOT IDENT •

    $default  reduce using rule 24 (expression)


State 41

    9 type: INT •

    $default  reduce using rule 9 (type)


State 42

   11 type: CHAR •

    $default  reduce using rule 11 (type)


State 43

   12 type: STRING •

    $default  reduce using rule 12 (type)


State 44

   10 type: FLOAT •

    $default  reduce using rule 10 (type)


State 45

   22 expression: IDENT COLON type • ASSIGN expression

    ASSIGN  shift, and go to state 65


State 46

   23 expression: VAR IDENT COLON • type ASSIGN expression

    INT     shift, and go to state 41
    CHAR    shift, and go to state 42
    STRING  shift, and go to state 43
    FLOAT   shift, and go to state 44

    type  go to state 66


State 47

    2 function: FUNC IDENT LPAREN • params RPAREN LCURLY statements RCURLY
    3         | FUNC IDENT LPAREN • RPAREN LCURLY statements RCURLY
    4         | FUNC IDENT LPAREN • RPAREN LCURLY RCURLY

    IDENT   shift, and go to state 67
    VAR     shift, and go to state 68
    RPAREN  shift, and go to state 69

    params  go to state 70
    param   go to state 71


State 48

   38 expression: LPAREN expression RPAREN •

    $default  reduce using rule 38 (expression)


State 49

   16 statement: IF LPAREN expression • RPAREN LCURLY statements RCURLY
   17          | IF LPAREN expression • RPAREN LCURLY statements RCURLY ELSE LCURLY statements RCURLY
   26 expression: expression • PLUS expression
   27           | expression • MINUS expression
   28           | expression • MULTIPLY expression
   29           | expression • DIVIDE expression
   30           | expression • EQ expression
   31           | expression • NEQ expression
   32           | expression • LT expression
   33           | expression • LTE expression
   34           | expression • GT expression
   35           | expression • GTE expression
   36           | expression • AND expression
   37           | expression • OR expression

    RPAREN    shift, and go to state 72
    PLUS      shift, and go to state 27
    MINUS     shift, and go to state 28
    MULTIPLY  shift, and go to state 29
    DIVIDE    shift, and go to state 30
    OR        shift, and go to state 31
    AND       shift, and go to state 32
    EQ        shift, and go to state 33
    NEQ       shift, and go to state 34
    LT        shift, and go to state 35
    GT        shift, and go to state 36
    LTE       shift, and go to state 37
    GTE       shift, and go to state 38


State 50

   18 statement: WHILE LPAREN expression • RPAREN LCURLY statements RCURLY
   26 expression: expression • PLUS expression
   27           | expression • MINUS expression
   28           | expression • MULTIPLY expression
   29           | expression • DIVIDE expression
   30           | expression • EQ expression
   31           | expression • NEQ expression
   32           | expression • LT expression
   33           | expression • LTE expression
   34           | expression • GT expression
   35           | expression • GTE expression
   36           | expression • AND expression
   37           | expression • OR expression

    RPAREN    shift, and go to state 73
    PLUS      shift, and go to state 27
    MINUS     shift, and go to state 28
    MULTIPLY  shift, and go to state 29
    DIVIDE    shift, and go to state 30
    OR        shift, and go to state 31
    AND       shift, and go to state 32
    EQ        shift, and go to state 33
    NEQ       shift, and go to state 34
    LT        shift, and go to state 35
    GT        shift, and go to state 36
    LTE       shift, and go to state 37
    GTE       shift, and go to state 38


State 51

   19 statement: FOR LPAREN expression • SEMICOLON expression SEMICOLON expression RPAREN LCURLY statements RCURLY
   26 expression: expression • PLUS expression
   27           | expression • MINUS expression
   28           | expression • MULTIPLY expression
   29           | expression • DIVIDE expression
   30           | expression • EQ expression
   31           | expression • NEQ expression
   32           | expression • LT expression
   33           | expression • LTE expression
   34           | expression • GT expression
   35           | expression • GTE expression
   36           | expression • AND expression
   37           | expression • OR expression

    SEMICOLON  shift, and go to state 74
    PLUS       shift, and go to state 27
    MINUS      shift, and go to state 28
    MULTIPLY   shift, and go to state 29
    DIVIDE     shift, and go to state 30
    OR         shift, and go to state 31
    AND        shift, and go to state 32
    EQ         shift, and go to state 33
    NEQ        shift, and go to state 34
    LT         shift, and go to state 35
    GT         shift, and go to state 36
    LTE        shift, and go to state 37
    GTE        shift, and go to state 38


State 52

   26 expression: expression • PLUS expression
   26           | expression PLUS expression •
   27           | expression • MINUS expression
   28           | expression • MULTIPLY expression
   29           | expression • DIVIDE expression
   30           | expression • EQ expression
   31           | expression • NEQ expression
   32           | expression • LT expression
   33           | expression • LTE expression
   34           | expression • GT expression
   35           | expression • GTE expression
   36           | expression • AND expression
   37           | expression • OR expression

    MULTIPLY  shift, and go to state 29
    DIVIDE    shift, and go to state 30

    $default  reduce using rule 26 (expression)


State 53

   26 expression: expression • PLUS expression
   27           | expression • MINUS expression
   27           | expression MINUS expression •
   28           | expression • MULTIPLY expression
   29           | expression • DIVIDE expression
   30           | expression • EQ expression
   31           | expression • NEQ expression
   32           | expression • LT expression
   33           | expression • LTE expression
   34           | expression • GT expression
   35           | expression • GTE expression
   36           | expression • AND expression
   37           | expression • OR expression

    MULTIPLY  shift, and go to state 29
    DIVIDE    shift, and go to state 30

    $default  reduce using rule 27 (expression)


State 54

   26 expression: expression • PLUS expression
   27           | expression • MINUS expression
   28           | expression • MULTIPLY expression
   28           | expression MULTIPLY expression •
   29           | expression • DIVIDE expression
   30           | expression • EQ expression
   31           | expression • NEQ expression
   32           | expression • LT expression
   33           | expression • LTE expression
   34           | expression • GT expression
   35           | expression • GTE expression
   36           | expression • AND expression
   37           | expression • OR expression

    $default  reduce using rule 28 (expression)


State 55

   26 expression: expression • PLUS expression
   27           | expression • MINUS expression
   28           | expression • MULTIPLY expression
   29           | expression • DIVIDE expression
   29           | expression DIVIDE expression •
   30           | expression • EQ expression
   31           | expression • NEQ expression
   32           | expression • LT expression
   33           | expression • LTE expression
   34           | expression • GT expression
   35           | expression • GTE expression
   36           | expression • AND expression
   37           | expression • OR expression

    $default  reduce using rule 29 (expression)


State 56

   26 expression: expression • PLUS expression
   27           | expression • MINUS expression
   28           | expression • MULTIPLY expression
   29           | expression • DIVIDE expression
   30           | expression • EQ expression
   31           | expression • NEQ expression
   32           | expression • LT expression
   33           | expression • LTE expression
   34           | expression • GT expression
   35           | expression • GTE expression
   36           | expression • AND expression
   37           | expression • OR expression
   37           | expression OR expression •

    PLUS      shift, and go to state 27
    MINUS     shift, and go to state 28
    MULTIPLY  shift, and go to state 29
    DIVIDE    shift, and go to state 30
    AND       shift, and go to state 32
    EQ        shift, and go to state 33
    NEQ       shift, and go to state 34
    LT        shift, and go to state 35
    GT        shift, and go to state 36
    LTE       shift, and go to state 37
    GTE       shift, and go to state 38

    $default  reduce using rule 37 (expression)


State 57

   26 expression: expression • PLUS expression
   27           | expression • MINUS expression
   28           | expression • MULTIPLY expression
   29           | expression • DIVIDE expression
   30           | expression • EQ expression
   31           | expression • NEQ expression
   32           | expression • LT expression
   33           | expression • LTE expression
   34           | expression • GT expression
   35           | expression • GTE expression
   36           | expression • AND expression
   36           | expression AND expression •
   37           | expression • OR expression

    PLUS      shift, and go to state 27
    MINUS     shift, and go to state 28
    MULTIPLY  shift, and go to state 29
    DIVIDE    shift, and go to state 30
    EQ        shift, and go to state 33
    NEQ       shift, and go to state 34
    LT        shift, and go to state 35
    GT        shift, and go to state 36
    LTE       shift, and go to state 37
    GTE       shift, and go to state 38

    $default  reduce using rule 36 (expression)


State 58

   26 expression: expression • PLUS expression
   27           | expression • MINUS expression
   28           | expression • MULTIPLY expression
   29           | expression • DIVIDE expression
   30           | expression • EQ expression
   30           | expression EQ expression •
   31           | expression • NEQ expression
   32           | expression • LT expression
   33           | expression • LTE expression
   34           | expression • GT expression
   35           | expression • GTE expression
   36           | expression • AND expression
   37           | expression • OR expression

    PLUS      shift, and go to state 27
    MINUS     shift, and go to state 28
    MULTIPLY  shift, and go to state 29
    DIVIDE    shift, and go to state 30
    LT        shift, and go to state 35
    GT        shift, and go to state 36
    LTE       shift, and go to state 37
    GTE       shift, and go to state 38

    $default  reduce using rule 30 (expression)


State 59

   26 expression: expression • PLUS expression
   27           | expression • MINUS expression
   28           | expression • MULTIPLY expression
   29           | expression • DIVIDE expression
   30           | expression • EQ expression
   31           | expression • NEQ expression
   31           | expression NEQ expression •
   32           | expression • LT expression
   33           | expression • LTE expression
   34           | expression • GT expression
   35           | expression • GTE expression
   36           | expression • AND expression
   37           | expression • OR expression

    PLUS      shift, and go to state 27
    MINUS     shift, and go to state 28
    MULTIPLY  shift, and go to state 29
    DIVIDE    shift, and go to state 30
    LT        shift, and go to state 35
    GT        shift, and go to state 36
    LTE       shift, and go to state 37
    GTE       shift, and go to state 38

    $default  reduce using rule 31 (expression)


State 60

   26 expression: expression • PLUS expression
   27           | expression • MINUS expression
   28           | expression • MULTIPLY expression
   29           | expression • DIVIDE expression
   30           | expression • EQ expression
   31           | expression • NEQ expression
   32           | expression • LT expression
   32           | expression LT expression •
   33           | expression • LTE expression
   34           | expression • GT expression
   35           | expression • GTE expression
   36           | expression • AND expression
   37           | expression • OR expression

    PLUS      shift, and go to state 27
    MINUS     shift, and go to state 28
    MULTIPLY  shift, and go to state 29
    DIVIDE    shift, and go to state 30

    $default  reduce using rule 32 (expression)


State 61

   26 expression: expression • PLUS expression
   27           | expression • MINUS expression
   28           | expression • MULTIPLY expression
   29           | expression • DIVIDE expression
   30           | expression • EQ expression
   31           | expression • NEQ expression
   32           | expression • LT expression
   33           | expression • LTE expression
   34           | expression • GT expression
   34           | expression GT expression •
   35           | expression • GTE expression
   36           | expression • AND expression
   37           | expression • OR expression

    PLUS      shift, and go to state 27
    MINUS     shift, and go to state 28
    MULTIPLY  shift, and go to state 29
    DIVIDE    shift, and go to state 30

    $default  reduce using rule 34 (expression)


State 62

   26 expression: expression • PLUS expression
   27           | expression • MINUS expression
   28           | expression • MULTIPLY expression
   29           | expression • DIVIDE expression
   30           | expression • EQ expression
   31           | expression • NEQ expression
   32           | expression • LT expression
   33           | expression • LTE expression
   33           | expression LTE expression •
   34           | expression • GT expression
   35           | expression • GTE expression
   36           | expression • AND expression
   37           | expression • OR expression

    PLUS      shift, and go to state 27
    MINUS     shift, and go to state 28
    MULTIPLY  shift, and go to state 29
    DIVIDE    shift, and go to state 30

    $default  reduce using rule 33 (expression)


State 63

   26 expression: expression • PLUS expression
   27           | expression • MINUS expression
   28           | expression • MULTIPLY expression
   29           | expression • DIVIDE expression
   30           | expression • EQ expression
   31           | expression • NEQ expression
   32           | expression • LT expression
   33           | expression • LTE expression
   34           | expression • GT expression
   35           | expression • GTE expression
   35           | expression GTE expression •
   36           | expression • AND expression
   37           | expression • OR expression

    PLUS      shift, and go to state 27
    MINUS     shift, and go to state 28
    MULTIPLY  shift, and go to state 29
    DIVIDE    shift, and go to state 30

    $default  reduce using rule 35 (expression)


State 64

   25 expression: IDENT LBRACKET expression RBRACKET •

    $default  reduce using rule 25 (expression)


State 65

   22 expression: IDENT COLON type ASSIGN • expression

    IDENT    shift, and go to state 4
    VAR      shift, and go to state 5
    NUMBER   shift, and go to state 7
    STR      shift, and go to state 8
    INTEGER  shift, and go to state 9
    LPAREN   shift, and go to state 10

    $default  reduce using rule 43 (expression)

    expression  go to state 75


State 66

   23 expression: VAR IDENT COLON type • ASSIGN expression

    ASSIGN  shift, and go to state 76


State 67

    7 param: IDENT • COLON type

    COLON  shift, and go to state 77


State 68

    8 param: VAR • IDENT COLON type

    IDENT  shift, and go to state 78


State 69

    3 function: FUNC IDENT LPAREN RPAREN • LCURLY statements RCURLY
    4         | FUNC IDENT LPAREN RPAREN • LCURLY RCURLY

    LCURLY  shift, and go to state 79


State 70

    2 function: FUNC IDENT LPAREN params • RPAREN LCURLY statements RCURLY
    6 params: params • COMMA param

    RPAREN  shift, and go to state 80
    COMMA   shift, and go to state 81


State 71

    5 params: param •

    $default  reduce using rule 5 (params)


State 72

   16 statement: IF LPAREN expression RPAREN • LCURLY statements RCURLY
   17          | IF LPAREN expression RPAREN • LCURLY statements RCURLY ELSE LCURLY statements RCURLY

    LCURLY  shift, and go to state 82


State 73

   18 statement: WHILE LPAREN expression RPAREN • LCURLY statements RCURLY

    LCURLY  shift, and go to state 83


State 74

   19 statement: FOR LPAREN expression SEMICOLON • expression SEMICOLON expression RPAREN LCURLY statements RCURLY

    IDENT    shift, and go to state 4
    VAR      shift, and go to state 5
    NUMBER   shift, and go to state 7
    STR      shift, and go to state 8
    INTEGER  shift, and go to state 9
    LPAREN   shift, and go to state 10

    $default  reduce using rule 43 (expression)

    expression  go to state 84


State 75

   22 expression: IDENT COLON type ASSIGN expression •
   26           | expression • PLUS expression
   27           | expression • MINUS expression
   28           | expression • MULTIPLY expression
   29           | expression • DIVIDE expression
   30           | expression • EQ expression
   31           | expression • NEQ expression
   32           | expression • LT expression
   33           | expression • LTE expression
   34           | expression • GT expression
   35           | expression • GTE expression
   36           | expression • AND expression
   37           | expression • OR expression

    PLUS      shift, and go to state 27
    MINUS     shift, and go to state 28
    MULTIPLY  shift, and go to state 29
    DIVIDE    shift, and go to state 30
    OR        shift, and go to state 31
    AND       shift, and go to state 32
    EQ        shift, and go to state 33
    NEQ       shift, and go to state 34
    LT        shift, and go to state 35
    GT        shift, and go to state 36
    LTE       shift, and go to state 37
    GTE       shift, and go to state 38

    PLUS      [reduce using rule 22 (expression)]
    MINUS     [reduce using rule 22 (expression)]
    MULTIPLY  [reduce using rule 22 (expression)]
    DIVIDE    [reduce using rule 22 (expression)]
    OR        [reduce using rule 22 (expression)]
    AND       [reduce using rule 22 (expression)]
    EQ        [reduce using rule 22 (expression)]
    NEQ       [reduce using rule 22 (expression)]
    LT        [reduce using rule 22 (expression)]
    GT        [reduce using rule 22 (expression)]
    LTE       [reduce using rule 22 (expression)]
    GTE       [reduce using rule 22 (expression)]
    $default  reduce using rule 22 (expression)


State 76

   23 expression: VAR IDENT COLON type ASSIGN • expression

    IDENT    shift, and go to state 4
    VAR      shift, and go to state 5
    NUMBER   shift, and go to state 7
    STR      shift, and go to state 8
    INTEGER  shift, and go to state 9
    LPAREN   shift, and go to state 10

    $default  reduce using rule 43 (expression)

    expression  go to state 85


State 77

    7 param: IDENT COLON • type

    INT     shift, and go to state 41
    CHAR    shift, and go to state 42
    STRING  shift, and go to state 43
    FLOAT   shift, and go to state 44

    type  go to state 86


State 78

    8 param: VAR IDENT • COLON type

    COLON  shift, and go to state 87


State 79

    3 function: FUNC IDENT LPAREN RPAREN LCURLY • statements RCURLY
    4         | FUNC IDENT LPAREN RPAREN LCURLY • RCURLY

    RCURLY  shift, and go to state 88

    RCURLY    [reduce using rule 14 (statements)]
    $default  reduce using rule 14 (statements)

    statements  go to state 89


State 80

    2 function: FUNC IDENT LPAREN params RPAREN • LCURLY statements RCURLY

    LCURLY  shift, and go to state 90


State 81

    6 params: params COMMA • param

    IDENT  shift, and go to state 67
    VAR    shift, and go to state 68

    param  go to state 91


State 82

   16 statement: IF LPAREN expression RPAREN LCURLY • statements RCURLY
   17          | IF LPAREN expression RPAREN LCURLY • statements RCURLY ELSE LCURLY statements RCURLY

    $default  reduce using rule 14 (statements)

    statements  go to state 92


State 83

   18 statement: WHILE LPAREN expression RPAREN LCURLY • statements RCURLY

    $default  reduce using rule 14 (statements)

    statements  go to state 93


State 84

   19 statement: FOR LPAREN expression SEMICOLON expression • SEMICOLON expression RPAREN LCURLY statements RCURLY
   26 expression: expression • PLUS expression
   27           | expression • MINUS expression
   28           | expression • MULTIPLY expression
   29           | expression • DIVIDE expression
   30           | expression • EQ expression
   31           | expression • NEQ expression
   32           | expression • LT expression
   33           | expression • LTE expression
   34           | expression • GT expression
   35           | expression • GTE expression
   36           | expression • AND expression
   37           | expression • OR expression

    SEMICOLON  shift, and go to state 94
    PLUS       shift, and go to state 27
    MINUS      shift, and go to state 28
    MULTIPLY   shift, and go to state 29
    DIVIDE     shift, and go to state 30
    OR         shift, and go to state 31
    AND        shift, and go to state 32
    EQ         shift, and go to state 33
    NEQ        shift, and go to state 34
    LT         shift, and go to state 35
    GT         shift, and go to state 36
    LTE        shift, and go to state 37
    GTE        shift, and go to state 38


State 85

   23 expression: VAR IDENT COLON type ASSIGN expression •
   26           | expression • PLUS expression
   27           | expression • MINUS expression
   28           | expression • MULTIPLY expression
   29           | expression • DIVIDE expression
   30           | expression • EQ expression
   31           | expression • NEQ expression
   32           | expression • LT expression
   33           | expression • LTE expression
   34           | expression • GT expression
   35           | expression • GTE expression
   36           | expression • AND expression
   37           | expression • OR expression

    PLUS      shift, and go to state 27
    MINUS     shift, and go to state 28
    MULTIPLY  shift, and go to state 29
    DIVIDE    shift, and go to state 30
    OR        shift, and go to state 31
    AND       shift, and go to state 32
    EQ        shift, and go to state 33
    NEQ       shift, and go to state 34
    LT        shift, and go to state 35
    GT        shift, and go to state 36
    LTE       shift, and go to state 37
    GTE       shift, and go to state 38

    PLUS      [reduce using rule 23 (expression)]
    MINUS     [reduce using rule 23 (expression)]
    MULTIPLY  [reduce using rule 23 (expression)]
    DIVIDE    [reduce using rule 23 (expression)]
    OR        [reduce using rule 23 (expression)]
    AND       [reduce using rule 23 (expression)]
    EQ        [reduce using rule 23 (expression)]
    NEQ       [reduce using rule 23 (expression)]
    LT        [reduce using rule 23 (expression)]
    GT        [reduce using rule 23 (expression)]
    LTE       [reduce using rule 23 (expression)]
    GTE       [reduce using rule 23 (expression)]
    $default  reduce using rule 23 (expression)


State 86

    7 param: IDENT COLON type •

    $default  reduce using rule 7 (param)


State 87

    8 param: VAR IDENT COLON • type

    INT     shift, and go to state 41
    CHAR    shift, and go to state 42
    STRING  shift, and go to state 43
    FLOAT   shift, and go to state 44

    type  go to state 95


State 88

    4 function: FUNC IDENT LPAREN RPAREN LCURLY RCURLY •

    $default  reduce using rule 4 (function)


State 89

    3 function: FUNC IDENT LPAREN RPAREN LCURLY statements • RCURLY
   13 statements: statements • statement

    IDENT    shift, and go to state 4
    VAR      shift, and go to state 5
    FUNC     shift, and go to state 6
    NUMBER   shift, and go to state 7
    STR      shift, and go to state 8
    INTEGER  shift, and go to state 9
    LPAREN   shift, and go to state 10
    RCURLY   shift, and go to state 96
    IF       shift, and go to state 11
    WHILE    shift, and go to state 12
    FOR      shift, and go to state 13

    IDENT      [reduce using rule 21 (statement)]
    VAR        [reduce using rule 21 (statement)]
    FUNC       [reduce using rule 21 (statement)]
    NUMBER     [reduce using rule 21 (statement)]
    STR        [reduce using rule 21 (statement)]
    INTEGER    [reduce using rule 21 (statement)]
    LPAREN     [reduce using rule 21 (statement)]
    RCURLY     [reduce using rule 21 (statement)]
    SEMICOLON  reduce using rule 21 (statement)
    SEMICOLON  [reduce using rule 43 (expression)]
    PLUS       reduce using rule 21 (statement)
    PLUS       [reduce using rule 43 (expression)]
    MINUS      reduce using rule 21 (statement)
    MINUS      [reduce using rule 43 (expression)]
    MULTIPLY   reduce using rule 21 (statement)
    MULTIPLY   [reduce using rule 43 (expression)]
    DIVIDE     reduce using rule 21 (statement)
    DIVIDE     [reduce using rule 43 (expression)]
    IF         [reduce using rule 21 (statement)]
    WHILE      [reduce using rule 21 (statement)]
    FOR        [reduce using rule 21 (statement)]
    OR         reduce using rule 21 (statement)
    OR         [reduce using rule 43 (expression)]
    AND        reduce using rule 21 (statement)
    AND        [reduce using rule 43 (expression)]
    EQ         reduce using rule 21 (statement)
    EQ         [reduce using rule 43 (expression)]
    NEQ        reduce using rule 21 (statement)
    NEQ        [reduce using rule 43 (expression)]
    LT         reduce using rule 21 (statement)
    LT         [reduce using rule 43 (expression)]
    GT         reduce using rule 21 (statement)
    GT         [reduce using rule 43 (expression)]
    LTE        reduce using rule 21 (statement)
    LTE        [reduce using rule 43 (expression)]
    GTE        reduce using rule 21 (statement)
    GTE        [reduce using rule 43 (expression)]
    $default   reduce using rule 21 (statement)

    function    go to state 14
    statement   go to state 15
    expression  go to state 16


State 90

    2 function: FUNC IDENT LPAREN params RPAREN LCURLY • statements RCURLY

    $default  reduce using rule 14 (statements)

    statements  go to state 97


State 91

    6 params: params COMMA param •

    $default  reduce using rule 6 (params)


State 92

   13 statements: statements • statement
   16 statement: IF LPAREN expression RPAREN LCURLY statements • RCURLY
   17          | IF LPAREN expression RPAREN LCURLY statements • RCURLY ELSE LCURLY statements RCURLY

    IDENT    shift, and go to state 4
    VAR      shift, and go to state 5
    FUNC     shift, and go to state 6
    NUMBER   shift, and go to state 7
    STR      shift, and go to state 8
    INTEGER  shift, and go to state 9
    LPAREN   shift, and go to state 10
    RCURLY   shift, and go to state 98
    IF       shift, and go to state 11
    WHILE    shift, and go to state 12
    FOR      shift, and go to state 13

    IDENT      [reduce using rule 21 (statement)]
    VAR        [reduce using rule 21 (statement)]
    FUNC       [reduce using rule 21 (statement)]
    NUMBER     [reduce using rule 21 (statement)]
    STR        [reduce using rule 21 (statement)]
    INTEGER    [reduce using rule 21 (statement)]
    LPAREN     [reduce using rule 21 (statement)]
    RCURLY     [reduce using rule 21 (statement)]
    SEMICOLON  reduce using rule 21 (statement)
    SEMICOLON  [reduce using rule 43 (expression)]
    PLUS       reduce using rule 21 (statement)
    PLUS       [reduce using rule 43 (expression)]
    MINUS      reduce using rule 21 (statement)
    MINUS      [reduce using rule 43 (expression)]
    MULTIPLY   reduce using rule 21 (statement)
    MULTIPLY   [reduce using rule 43 (expression)]
    DIVIDE     reduce using rule 21 (statement)
    DIVIDE     [reduce using rule 43 (expression)]
    IF         [reduce using rule 21 (statement)]
    WHILE      [reduce using rule 21 (statement)]
    FOR        [reduce using rule 21 (statement)]
    OR         reduce using rule 21 (statement)
    OR         [reduce using rule 43 (expression)]
    AND        reduce using rule 21 (statement)
    AND        [reduce using rule 43 (expression)]
    EQ         reduce using rule 21 (statement)
    EQ         [reduce using rule 43 (expression)]
    NEQ        reduce using rule 21 (statement)
    NEQ        [reduce using rule 43 (expression)]
    LT         reduce using rule 21 (statement)
    LT         [reduce using rule 43 (expression)]
    GT         reduce using rule 21 (statement)
    GT         [reduce using rule 43 (expression)]
    LTE        reduce using rule 21 (statement)
    LTE        [reduce using rule 43 (expression)]
    GTE        reduce using rule 21 (statement)
    GTE        [reduce using rule 43 (expression)]
    $default   reduce using rule 21 (statement)

    function    go to state 14
    statement   go to state 15
    expression  go to state 16


State 93

   13 statements: statements • statement
   18 statement: WHILE LPAREN expression RPAREN LCURLY statements • RCURLY

    IDENT    shift, and go to state 4
    VAR      shift, and go to state 5
    FUNC     shift, and go to state 6
    NUMBER   shift, and go to state 7
    STR      shift, and go to state 8
    INTEGER  shift, and go to state 9
    LPAREN   shift, and go to state 10
    RCURLY   shift, and go to state 99
    IF       shift, and go to state 11
    WHILE    shift, and go to state 12
    FOR      shift, and go to state 13

    IDENT      [reduce using rule 21 (statement)]
    VAR        [reduce using rule 21 (statement)]
    FUNC       [reduce using rule 21 (statement)]
    NUMBER     [reduce using rule 21 (statement)]
    STR        [reduce using rule 21 (statement)]
    INTEGER    [reduce using rule 21 (statement)]
    LPAREN     [reduce using rule 21 (statement)]
    RCURLY     [reduce using rule 21 (statement)]
    SEMICOLON  reduce using rule 21 (statement)
    SEMICOLON  [reduce using rule 43 (expression)]
    PLUS       reduce using rule 21 (statement)
    PLUS       [reduce using rule 43 (expression)]
    MINUS      reduce using rule 21 (statement)
    MINUS      [reduce using rule 43 (expression)]
    MULTIPLY   reduce using rule 21 (statement)
    MULTIPLY   [reduce using rule 43 (expression)]
    DIVIDE     reduce using rule 21 (statement)
    DIVIDE     [reduce using rule 43 (expression)]
    IF         [reduce using rule 21 (statement)]
    WHILE      [reduce using rule 21 (statement)]
    FOR        [reduce using rule 21 (statement)]
    OR         reduce using rule 21 (statement)
    OR         [reduce using rule 43 (expression)]
    AND        reduce using rule 21 (statement)
    AND        [reduce using rule 43 (expression)]
    EQ         reduce using rule 21 (statement)
    EQ         [reduce using rule 43 (expression)]
    NEQ        reduce using rule 21 (statement)
    NEQ        [reduce using rule 43 (expression)]
    LT         reduce using rule 21 (statement)
    LT         [reduce using rule 43 (expression)]
    GT         reduce using rule 21 (statement)
    GT         [reduce using rule 43 (expression)]
    LTE        reduce using rule 21 (statement)
    LTE        [reduce using rule 43 (expression)]
    GTE        reduce using rule 21 (statement)
    GTE        [reduce using rule 43 (expression)]
    $default   reduce using rule 21 (statement)

    function    go to state 14
    statement   go to state 15
    expression  go to state 16


State 94

   19 statement: FOR LPAREN expression SEMICOLON expression SEMICOLON • expression RPAREN LCURLY statements RCURLY

    IDENT    shift, and go to state 4
    VAR      shift, and go to state 5
    NUMBER   shift, and go to state 7
    STR      shift, and go to state 8
    INTEGER  shift, and go to state 9
    LPAREN   shift, and go to state 10

    $default  reduce using rule 43 (expression)

    expression  go to state 100


State 95

    8 param: VAR IDENT COLON type •

    $default  reduce using rule 8 (param)


State 96

    3 function: FUNC IDENT LPAREN RPAREN LCURLY statements RCURLY •

    $default  reduce using rule 3 (function)


State 97

    2 function: FUNC IDENT LPAREN params RPAREN LCURLY statements • RCURLY
   13 statements: statements • statement

    IDENT    shift, and go to state 4
    VAR      shift, and go to state 5
    FUNC     shift, and go to state 6
    NUMBER   shift, and go to state 7
    STR      shift, and go to state 8
    INTEGER  shift, and go to state 9
    LPAREN   shift, and go to state 10
    RCURLY   shift, and go to state 101
    IF       shift, and go to state 11
    WHILE    shift, and go to state 12
    FOR      shift, and go to state 13

    IDENT      [reduce using rule 21 (statement)]
    VAR        [reduce using rule 21 (statement)]
    FUNC       [reduce using rule 21 (statement)]
    NUMBER     [reduce using rule 21 (statement)]
    STR        [reduce using rule 21 (statement)]
    INTEGER    [reduce using rule 21 (statement)]
    LPAREN     [reduce using rule 21 (statement)]
    RCURLY     [reduce using rule 21 (statement)]
    SEMICOLON  reduce using rule 21 (statement)
    SEMICOLON  [reduce using rule 43 (expression)]
    PLUS       reduce using rule 21 (statement)
    PLUS       [reduce using rule 43 (expression)]
    MINUS      reduce using rule 21 (statement)
    MINUS      [reduce using rule 43 (expression)]
    MULTIPLY   reduce using rule 21 (statement)
    MULTIPLY   [reduce using rule 43 (expression)]
    DIVIDE     reduce using rule 21 (statement)
    DIVIDE     [reduce using rule 43 (expression)]
    IF         [reduce using rule 21 (statement)]
    WHILE      [reduce using rule 21 (statement)]
    FOR        [reduce using rule 21 (statement)]
    OR         reduce using rule 21 (statement)
    OR         [reduce using rule 43 (expression)]
    AND        reduce using rule 21 (statement)
    AND        [reduce using rule 43 (expression)]
    EQ         reduce using rule 21 (statement)
    EQ         [reduce using rule 43 (expression)]
    NEQ        reduce using rule 21 (statement)
    NEQ        [reduce using rule 43 (expression)]
    LT         reduce using rule 21 (statement)
    LT         [reduce using rule 43 (expression)]
    GT         reduce using rule 21 (statement)
    GT         [reduce using rule 43 (expression)]
    LTE        reduce using rule 21 (statement)
    LTE        [reduce using rule 43 (expression)]
    GTE        reduce using rule 21 (statement)
    GTE        [reduce using rule 43 (expression)]
    $default   reduce using rule 21 (statement)

    function    go to state 14
    statement   go to state 15
    expression  go to state 16


State 98

   16 statement: IF LPAREN expression RPAREN LCURLY statements RCURLY •
   17          | IF LPAREN expression RPAREN LCURLY statements RCURLY • ELSE LCURLY statements RCURLY

    ELSE  shift, and go to state 102

    $default  reduce using rule 16 (statement)


State 99

   18 statement: WHILE LPAREN expression RPAREN LCURLY statements RCURLY •

    $default  reduce using rule 18 (statement)


State 100

   19 statement: FOR LPAREN expression SEMICOLON expression SEMICOLON expression • RPAREN LCURLY statements RCURLY
   26 expression: expression • PLUS expression
   27           | expression • MINUS expression
   28           | expression • MULTIPLY expression
   29           | expression • DIVIDE expression
   30           | expression • EQ expression
   31           | expression • NEQ expression
   32           | expression • LT expression
   33           | expression • LTE expression
   34           | expression • GT expression
   35           | expression • GTE expression
   36           | expression • AND expression
   37           | expression • OR expression

    RPAREN    shift, and go to state 103
    PLUS      shift, and go to state 27
    MINUS     shift, and go to state 28
    MULTIPLY  shift, and go to state 29
    DIVIDE    shift, and go to state 30
    OR        shift, and go to state 31
    AND       shift, and go to state 32
    EQ        shift, and go to state 33
    NEQ       shift, and go to state 34
    LT        shift, and go to state 35
    GT        shift, and go to state 36
    LTE       shift, and go to state 37
    GTE       shift, and go to state 38


State 101

    2 function: FUNC IDENT LPAREN params RPAREN LCURLY statements RCURLY •

    $default  reduce using rule 2 (function)


State 102

   17 statement: IF LPAREN expression RPAREN LCURLY statements RCURLY ELSE • LCURLY statements RCURLY

    LCURLY  shift, and go to state 104


State 103

   19 statement: FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN • LCURLY statements RCURLY

    LCURLY  shift, and go to state 105


State 104

   17 statement: IF LPAREN expression RPAREN LCURLY statements RCURLY ELSE LCURLY • statements RCURLY

    $default  reduce using rule 14 (statements)

    statements  go to state 106


State 105

   19 statement: FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN LCURLY • statements RCURLY

    $default  reduce using rule 14 (statements)

    statements  go to state 107


State 106

   13 statements: statements • statement
   17 statement: IF LPAREN expression RPAREN LCURLY statements RCURLY ELSE LCURLY statements • RCURLY

    IDENT    shift, and go to state 4
    VAR      shift, and go to state 5
    FUNC     shift, and go to state 6
    NUMBER   shift, and go to state 7
    STR      shift, and go to state 8
    INTEGER  shift, and go to state 9
    LPAREN   shift, and go to state 10
    RCURLY   shift, and go to state 108
    IF       shift, and go to state 11
    WHILE    shift, and go to state 12
    FOR      shift, and go to state 13

    IDENT      [reduce using rule 21 (statement)]
    VAR        [reduce using rule 21 (statement)]
    FUNC       [reduce using rule 21 (statement)]
    NUMBER     [reduce using rule 21 (statement)]
    STR        [reduce using rule 21 (statement)]
    INTEGER    [reduce using rule 21 (statement)]
    LPAREN     [reduce using rule 21 (statement)]
    RCURLY     [reduce using rule 21 (statement)]
    SEMICOLON  reduce using rule 21 (statement)
    SEMICOLON  [reduce using rule 43 (expression)]
    PLUS       reduce using rule 21 (statement)
    PLUS       [reduce using rule 43 (expression)]
    MINUS      reduce using rule 21 (statement)
    MINUS      [reduce using rule 43 (expression)]
    MULTIPLY   reduce using rule 21 (statement)
    MULTIPLY   [reduce using rule 43 (expression)]
    DIVIDE     reduce using rule 21 (statement)
    DIVIDE     [reduce using rule 43 (expression)]
    IF         [reduce using rule 21 (statement)]
    WHILE      [reduce using rule 21 (statement)]
    FOR        [reduce using rule 21 (statement)]
    OR         reduce using rule 21 (statement)
    OR         [reduce using rule 43 (expression)]
    AND        reduce using rule 21 (statement)
    AND        [reduce using rule 43 (expression)]
    EQ         reduce using rule 21 (statement)
    EQ         [reduce using rule 43 (expression)]
    NEQ        reduce using rule 21 (statement)
    NEQ        [reduce using rule 43 (expression)]
    LT         reduce using rule 21 (statement)
    LT         [reduce using rule 43 (expression)]
    GT         reduce using rule 21 (statement)
    GT         [reduce using rule 43 (expression)]
    LTE        reduce using rule 21 (statement)
    LTE        [reduce using rule 43 (expression)]
    GTE        reduce using rule 21 (statement)
    GTE        [reduce using rule 43 (expression)]
    $default   reduce using rule 21 (statement)

    function    go to state 14
    statement   go to state 15
    expression  go to state 16


State 107

   13 statements: statements • statement
   19 statement: FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN LCURLY statements • RCURLY

    IDENT    shift, and go to state 4
    VAR      shift, and go to state 5
    FUNC     shift, and go to state 6
    NUMBER   shift, and go to state 7
    STR      shift, and go to state 8
    INTEGER  shift, and go to state 9
    LPAREN   shift, and go to state 10
    RCURLY   shift, and go to state 109
    IF       shift, and go to state 11
    WHILE    shift, and go to state 12
    FOR      shift, and go to state 13

    IDENT      [reduce using rule 21 (statement)]
    VAR        [reduce using rule 21 (statement)]
    FUNC       [reduce using rule 21 (statement)]
    NUMBER     [reduce using rule 21 (statement)]
    STR        [reduce using rule 21 (statement)]
    INTEGER    [reduce using rule 21 (statement)]
    LPAREN     [reduce using rule 21 (statement)]
    RCURLY     [reduce using rule 21 (statement)]
    SEMICOLON  reduce using rule 21 (statement)
    SEMICOLON  [reduce using rule 43 (expression)]
    PLUS       reduce using rule 21 (statement)
    PLUS       [reduce using rule 43 (expression)]
    MINUS      reduce using rule 21 (statement)
    MINUS      [reduce using rule 43 (expression)]
    MULTIPLY   reduce using rule 21 (statement)
    MULTIPLY   [reduce using rule 43 (expression)]
    DIVIDE     reduce using rule 21 (statement)
    DIVIDE     [reduce using rule 43 (expression)]
    IF         [reduce using rule 21 (statement)]
    WHILE      [reduce using rule 21 (statement)]
    FOR        [reduce using rule 21 (statement)]
    OR         reduce using rule 21 (statement)
    OR         [reduce using rule 43 (expression)]
    AND        reduce using rule 21 (statement)
    AND        [reduce using rule 43 (expression)]
    EQ         reduce using rule 21 (statement)
    EQ         [reduce using rule 43 (expression)]
    NEQ        reduce using rule 21 (statement)
    NEQ        [reduce using rule 43 (expression)]
    LT         reduce using rule 21 (statement)
    LT         [reduce using rule 43 (expression)]
    GT         reduce using rule 21 (statement)
    GT         [reduce using rule 43 (expression)]
    LTE        reduce using rule 21 (statement)
    LTE        [reduce using rule 43 (expression)]
    GTE        reduce using rule 21 (statement)
    GTE        [reduce using rule 43 (expression)]
    $default   reduce using rule 21 (statement)

    function    go to state 14
    statement   go to state 15
    expression  go to state 16


State 108

   17 statement: IF LPAREN expression RPAREN LCURLY statements RCURLY ELSE LCURLY statements RCURLY •

    $default  reduce using rule 17 (statement)


State 109

   19 statement: FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN LCURLY statements RCURLY •

    $default  reduce using rule 19 (statement)
