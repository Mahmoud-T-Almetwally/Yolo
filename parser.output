Terminals unused in grammar

    T_FLOAT
    LBRACKET
    RBRACKET
    DOT
    IF
    ELSE
    WHILE
    FOR
    RETURN
    OR
    AND
    EQ
    NEQ
    LT
    GT
    LTE
    GTE
    POWER
    INC
    DEC


State 0 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: ε
    2        | statements

    3 function: FUNC IDENT LPAREN params RPAREN LCURLY statements RCURLY
    4         | FUNC IDENT LPAREN params RPAREN COLON type LCURLY statements RCURLY

    5 params: ε
    6       | param_list

    7 param_list: param
    8           | param_list COMMA param

    9 param: IDENT COLON type
   10      | VAR IDENT COLON type

   11 type: T_INTEGER
   12     | T_DOUBLE
   13     | T_CHAR
   14     | T_STRING
   15     | T_BOOL
   16     | T_VOID

   17 literal: INTEGER
   18        | DOUBLE
   19        | CHAR
   20        | STRING
   21        | BOOL

   22 expression: literal
   23           | IDENT ASSIGN expression
   24           | IDENT
   25           | LPAREN expression RPAREN
   26           | expression PLUS expression
   27           | expression MINUS expression
   28           | expression MULTIPLY expression
   29           | expression DIVIDE expression
   30           | MINUS expression
   31           | NOT expression

   32 statements: ε
   33           | statements statement

   34 statement: expression SEMICOLON
   35          | function
   36          | declaration_statement SEMICOLON
   37          | print_statement
   38          | LCURLY statements RCURLY

   39 declaration_statement: IDENT COLON type ASSIGN expression
   40                      | VAR IDENT COLON type ASSIGN expression

   41 print_statement: PRINT LPAREN expression RPAREN SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    FUNC (258) 3 4
    IDENT <string_val> (259) 3 4 9 10 23 24 39 40
    INTEGER <int_val> (260) 17
    DOUBLE <double_val> (261) 18
    CHAR <char_val> (262) 19
    STRING <string_val> (263) 20
    BOOL <bool_val> (264) 21
    T_INTEGER (265) 11
    T_FLOAT (266)
    T_CHAR (267) 13
    T_STRING (268) 14
    T_DOUBLE (269) 12
    T_BOOL (270) 15
    T_VOID (271) 16
    LPAREN (272) 3 4 25 41
    RPAREN (273) 3 4 25 41
    LCURLY (274) 3 4 38
    RCURLY (275) 3 4 38
    LBRACKET (276)
    RBRACKET (277)
    DOT (278)
    SEMICOLON (279) 34 36 41
    COLON (280) 4 9 10 39 40
    COMMA (281) 8
    VAR (282) 10 40
    IF (283)
    ELSE (284)
    WHILE (285)
    FOR (286)
    PRINT (287) 41
    RETURN (288)
    ASSIGN (289) 23 39 40
    OR (290)
    AND (291)
    EQ (292)
    NEQ (293)
    LT (294)
    GT (295)
    LTE (296)
    GTE (297)
    PLUS (298) 26
    MINUS (299) 27 30
    MULTIPLY (300) 28
    DIVIDE (301) 29
    POWER (302)
    NOT (303) 31
    UNARY_MINUS (304)
    INC (305)
    DEC (306)


Nonterminals, with rules where they appear

    $accept (52)
        on left: 0
    program <void> (53)
        on left: 1 2
        on right: 0
    function <void> (54)
        on left: 3 4
        on right: 35
    params <void> (55)
        on left: 5 6
        on right: 3 4
    param_list <void> (56)
        on left: 7 8
        on right: 6 8
    param <void> (57)
        on left: 9 10
        on right: 7 8
    type <type_val> (58)
        on left: 11 12 13 14 15 16
        on right: 4 9 10 39 40
    literal <sym_ptr> (59)
        on left: 17 18 19 20 21
        on right: 22
    expression <sym_ptr> (60)
        on left: 22 23 24 25 26 27 28 29 30 31
        on right: 23 25 26 27 28 29 30 31 34 39 40 41
    statements <void> (61)
        on left: 32 33
        on right: 2 3 4 33 38
    statement <void> (62)
        on left: 34 35 36 37 38
        on right: 33
    declaration_statement <void> (63)
        on left: 39 40
        on right: 36
    print_statement <void> (64)
        on left: 41
        on right: 37


State 0

    0 $accept: • program $end

    $end      reduce using rule 1 (program)
    $end      [reduce using rule 32 (statements)]
    $default  reduce using rule 32 (statements)

    program     go to state 1
    statements  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    2 program: statements •
   33 statements: statements • statement

    FUNC     shift, and go to state 4
    IDENT    shift, and go to state 5
    INTEGER  shift, and go to state 6
    DOUBLE   shift, and go to state 7
    CHAR     shift, and go to state 8
    STRING   shift, and go to state 9
    BOOL     shift, and go to state 10
    LPAREN   shift, and go to state 11
    LCURLY   shift, and go to state 12
    VAR      shift, and go to state 13
    PRINT    shift, and go to state 14
    MINUS    shift, and go to state 15
    NOT      shift, and go to state 16

    $default  reduce using rule 2 (program)

    function               go to state 17
    literal                go to state 18
    expression             go to state 19
    statement              go to state 20
    declaration_statement  go to state 21
    print_statement        go to state 22


State 3

    0 $accept: program $end •

    $default  accept


State 4

    3 function: FUNC • IDENT LPAREN params RPAREN LCURLY statements RCURLY
    4         | FUNC • IDENT LPAREN params RPAREN COLON type LCURLY statements RCURLY

    IDENT  shift, and go to state 23


State 5

   23 expression: IDENT • ASSIGN expression
   24           | IDENT •
   39 declaration_statement: IDENT • COLON type ASSIGN expression

    COLON   shift, and go to state 24
    ASSIGN  shift, and go to state 25

    $default  reduce using rule 24 (expression)


State 6

   17 literal: INTEGER •

    $default  reduce using rule 17 (literal)


State 7

   18 literal: DOUBLE •

    $default  reduce using rule 18 (literal)


State 8

   19 literal: CHAR •

    $default  reduce using rule 19 (literal)


State 9

   20 literal: STRING •

    $default  reduce using rule 20 (literal)


State 10

   21 literal: BOOL •

    $default  reduce using rule 21 (literal)


State 11

   25 expression: LPAREN • expression RPAREN

    IDENT    shift, and go to state 26
    INTEGER  shift, and go to state 6
    DOUBLE   shift, and go to state 7
    CHAR     shift, and go to state 8
    STRING   shift, and go to state 9
    BOOL     shift, and go to state 10
    LPAREN   shift, and go to state 11
    MINUS    shift, and go to state 15
    NOT      shift, and go to state 16

    literal     go to state 18
    expression  go to state 27


State 12

   38 statement: LCURLY • statements RCURLY

    $default  reduce using rule 32 (statements)

    statements  go to state 28


State 13

   40 declaration_statement: VAR • IDENT COLON type ASSIGN expression

    IDENT  shift, and go to state 29


State 14

   41 print_statement: PRINT • LPAREN expression RPAREN SEMICOLON

    LPAREN  shift, and go to state 30


State 15

   30 expression: MINUS • expression

    IDENT    shift, and go to state 26
    INTEGER  shift, and go to state 6
    DOUBLE   shift, and go to state 7
    CHAR     shift, and go to state 8
    STRING   shift, and go to state 9
    BOOL     shift, and go to state 10
    LPAREN   shift, and go to state 11
    MINUS    shift, and go to state 15
    NOT      shift, and go to state 16

    literal     go to state 18
    expression  go to state 31


State 16

   31 expression: NOT • expression

    IDENT    shift, and go to state 26
    INTEGER  shift, and go to state 6
    DOUBLE   shift, and go to state 7
    CHAR     shift, and go to state 8
    STRING   shift, and go to state 9
    BOOL     shift, and go to state 10
    LPAREN   shift, and go to state 11
    MINUS    shift, and go to state 15
    NOT      shift, and go to state 16

    literal     go to state 18
    expression  go to state 32


State 17

   35 statement: function •

    $default  reduce using rule 35 (statement)


State 18

   22 expression: literal •

    $default  reduce using rule 22 (expression)


State 19

   26 expression: expression • PLUS expression
   27           | expression • MINUS expression
   28           | expression • MULTIPLY expression
   29           | expression • DIVIDE expression
   34 statement: expression • SEMICOLON

    SEMICOLON  shift, and go to state 33
    PLUS       shift, and go to state 34
    MINUS      shift, and go to state 35
    MULTIPLY   shift, and go to state 36
    DIVIDE     shift, and go to state 37


State 20

   33 statements: statements statement •

    $default  reduce using rule 33 (statements)


State 21

   36 statement: declaration_statement • SEMICOLON

    SEMICOLON  shift, and go to state 38


State 22

   37 statement: print_statement •

    $default  reduce using rule 37 (statement)


State 23

    3 function: FUNC IDENT • LPAREN params RPAREN LCURLY statements RCURLY
    4         | FUNC IDENT • LPAREN params RPAREN COLON type LCURLY statements RCURLY

    LPAREN  shift, and go to state 39


State 24

   39 declaration_statement: IDENT COLON • type ASSIGN expression

    T_INTEGER  shift, and go to state 40
    T_CHAR     shift, and go to state 41
    T_STRING   shift, and go to state 42
    T_DOUBLE   shift, and go to state 43
    T_BOOL     shift, and go to state 44
    T_VOID     shift, and go to state 45

    type  go to state 46


State 25

   23 expression: IDENT ASSIGN • expression

    IDENT    shift, and go to state 26
    INTEGER  shift, and go to state 6
    DOUBLE   shift, and go to state 7
    CHAR     shift, and go to state 8
    STRING   shift, and go to state 9
    BOOL     shift, and go to state 10
    LPAREN   shift, and go to state 11
    MINUS    shift, and go to state 15
    NOT      shift, and go to state 16

    literal     go to state 18
    expression  go to state 47


State 26

   23 expression: IDENT • ASSIGN expression
   24           | IDENT •

    ASSIGN  shift, and go to state 25

    $default  reduce using rule 24 (expression)


State 27

   25 expression: LPAREN expression • RPAREN
   26           | expression • PLUS expression
   27           | expression • MINUS expression
   28           | expression • MULTIPLY expression
   29           | expression • DIVIDE expression

    RPAREN    shift, and go to state 48
    PLUS      shift, and go to state 34
    MINUS     shift, and go to state 35
    MULTIPLY  shift, and go to state 36
    DIVIDE    shift, and go to state 37


State 28

   33 statements: statements • statement
   38 statement: LCURLY statements • RCURLY

    FUNC     shift, and go to state 4
    IDENT    shift, and go to state 5
    INTEGER  shift, and go to state 6
    DOUBLE   shift, and go to state 7
    CHAR     shift, and go to state 8
    STRING   shift, and go to state 9
    BOOL     shift, and go to state 10
    LPAREN   shift, and go to state 11
    LCURLY   shift, and go to state 12
    RCURLY   shift, and go to state 49
    VAR      shift, and go to state 13
    PRINT    shift, and go to state 14
    MINUS    shift, and go to state 15
    NOT      shift, and go to state 16

    function               go to state 17
    literal                go to state 18
    expression             go to state 19
    statement              go to state 20
    declaration_statement  go to state 21
    print_statement        go to state 22


State 29

   40 declaration_statement: VAR IDENT • COLON type ASSIGN expression

    COLON  shift, and go to state 50


State 30

   41 print_statement: PRINT LPAREN • expression RPAREN SEMICOLON

    IDENT    shift, and go to state 26
    INTEGER  shift, and go to state 6
    DOUBLE   shift, and go to state 7
    CHAR     shift, and go to state 8
    STRING   shift, and go to state 9
    BOOL     shift, and go to state 10
    LPAREN   shift, and go to state 11
    MINUS    shift, and go to state 15
    NOT      shift, and go to state 16

    literal     go to state 18
    expression  go to state 51


State 31

   26 expression: expression • PLUS expression
   27           | expression • MINUS expression
   28           | expression • MULTIPLY expression
   29           | expression • DIVIDE expression
   30           | MINUS expression •

    $default  reduce using rule 30 (expression)


State 32

   26 expression: expression • PLUS expression
   27           | expression • MINUS expression
   28           | expression • MULTIPLY expression
   29           | expression • DIVIDE expression
   31           | NOT expression •

    $default  reduce using rule 31 (expression)


State 33

   34 statement: expression SEMICOLON •

    $default  reduce using rule 34 (statement)


State 34

   26 expression: expression PLUS • expression

    IDENT    shift, and go to state 26
    INTEGER  shift, and go to state 6
    DOUBLE   shift, and go to state 7
    CHAR     shift, and go to state 8
    STRING   shift, and go to state 9
    BOOL     shift, and go to state 10
    LPAREN   shift, and go to state 11
    MINUS    shift, and go to state 15
    NOT      shift, and go to state 16

    literal     go to state 18
    expression  go to state 52


State 35

   27 expression: expression MINUS • expression

    IDENT    shift, and go to state 26
    INTEGER  shift, and go to state 6
    DOUBLE   shift, and go to state 7
    CHAR     shift, and go to state 8
    STRING   shift, and go to state 9
    BOOL     shift, and go to state 10
    LPAREN   shift, and go to state 11
    MINUS    shift, and go to state 15
    NOT      shift, and go to state 16

    literal     go to state 18
    expression  go to state 53


State 36

   28 expression: expression MULTIPLY • expression

    IDENT    shift, and go to state 26
    INTEGER  shift, and go to state 6
    DOUBLE   shift, and go to state 7
    CHAR     shift, and go to state 8
    STRING   shift, and go to state 9
    BOOL     shift, and go to state 10
    LPAREN   shift, and go to state 11
    MINUS    shift, and go to state 15
    NOT      shift, and go to state 16

    literal     go to state 18
    expression  go to state 54


State 37

   29 expression: expression DIVIDE • expression

    IDENT    shift, and go to state 26
    INTEGER  shift, and go to state 6
    DOUBLE   shift, and go to state 7
    CHAR     shift, and go to state 8
    STRING   shift, and go to state 9
    BOOL     shift, and go to state 10
    LPAREN   shift, and go to state 11
    MINUS    shift, and go to state 15
    NOT      shift, and go to state 16

    literal     go to state 18
    expression  go to state 55


State 38

   36 statement: declaration_statement SEMICOLON •

    $default  reduce using rule 36 (statement)


State 39

    3 function: FUNC IDENT LPAREN • params RPAREN LCURLY statements RCURLY
    4         | FUNC IDENT LPAREN • params RPAREN COLON type LCURLY statements RCURLY

    IDENT  shift, and go to state 56
    VAR    shift, and go to state 57

    $default  reduce using rule 5 (params)

    params      go to state 58
    param_list  go to state 59
    param       go to state 60


State 40

   11 type: T_INTEGER •

    $default  reduce using rule 11 (type)


State 41

   13 type: T_CHAR •

    $default  reduce using rule 13 (type)


State 42

   14 type: T_STRING •

    $default  reduce using rule 14 (type)


State 43

   12 type: T_DOUBLE •

    $default  reduce using rule 12 (type)


State 44

   15 type: T_BOOL •

    $default  reduce using rule 15 (type)


State 45

   16 type: T_VOID •

    $default  reduce using rule 16 (type)


State 46

   39 declaration_statement: IDENT COLON type • ASSIGN expression

    ASSIGN  shift, and go to state 61


State 47

   23 expression: IDENT ASSIGN expression •
   26           | expression • PLUS expression
   27           | expression • MINUS expression
   28           | expression • MULTIPLY expression
   29           | expression • DIVIDE expression

    PLUS      shift, and go to state 34
    MINUS     shift, and go to state 35
    MULTIPLY  shift, and go to state 36
    DIVIDE    shift, and go to state 37

    $default  reduce using rule 23 (expression)


State 48

   25 expression: LPAREN expression RPAREN •

    $default  reduce using rule 25 (expression)


State 49

   38 statement: LCURLY statements RCURLY •

    $default  reduce using rule 38 (statement)


State 50

   40 declaration_statement: VAR IDENT COLON • type ASSIGN expression

    T_INTEGER  shift, and go to state 40
    T_CHAR     shift, and go to state 41
    T_STRING   shift, and go to state 42
    T_DOUBLE   shift, and go to state 43
    T_BOOL     shift, and go to state 44
    T_VOID     shift, and go to state 45

    type  go to state 62


State 51

   26 expression: expression • PLUS expression
   27           | expression • MINUS expression
   28           | expression • MULTIPLY expression
   29           | expression • DIVIDE expression
   41 print_statement: PRINT LPAREN expression • RPAREN SEMICOLON

    RPAREN    shift, and go to state 63
    PLUS      shift, and go to state 34
    MINUS     shift, and go to state 35
    MULTIPLY  shift, and go to state 36
    DIVIDE    shift, and go to state 37


State 52

   26 expression: expression • PLUS expression
   26           | expression PLUS expression •
   27           | expression • MINUS expression
   28           | expression • MULTIPLY expression
   29           | expression • DIVIDE expression

    MULTIPLY  shift, and go to state 36
    DIVIDE    shift, and go to state 37

    $default  reduce using rule 26 (expression)


State 53

   26 expression: expression • PLUS expression
   27           | expression • MINUS expression
   27           | expression MINUS expression •
   28           | expression • MULTIPLY expression
   29           | expression • DIVIDE expression

    MULTIPLY  shift, and go to state 36
    DIVIDE    shift, and go to state 37

    $default  reduce using rule 27 (expression)


State 54

   26 expression: expression • PLUS expression
   27           | expression • MINUS expression
   28           | expression • MULTIPLY expression
   28           | expression MULTIPLY expression •
   29           | expression • DIVIDE expression

    $default  reduce using rule 28 (expression)


State 55

   26 expression: expression • PLUS expression
   27           | expression • MINUS expression
   28           | expression • MULTIPLY expression
   29           | expression • DIVIDE expression
   29           | expression DIVIDE expression •

    $default  reduce using rule 29 (expression)


State 56

    9 param: IDENT • COLON type

    COLON  shift, and go to state 64


State 57

   10 param: VAR • IDENT COLON type

    IDENT  shift, and go to state 65


State 58

    3 function: FUNC IDENT LPAREN params • RPAREN LCURLY statements RCURLY
    4         | FUNC IDENT LPAREN params • RPAREN COLON type LCURLY statements RCURLY

    RPAREN  shift, and go to state 66


State 59

    6 params: param_list •
    8 param_list: param_list • COMMA param

    COMMA  shift, and go to state 67

    $default  reduce using rule 6 (params)


State 60

    7 param_list: param •

    $default  reduce using rule 7 (param_list)


State 61

   39 declaration_statement: IDENT COLON type ASSIGN • expression

    IDENT    shift, and go to state 26
    INTEGER  shift, and go to state 6
    DOUBLE   shift, and go to state 7
    CHAR     shift, and go to state 8
    STRING   shift, and go to state 9
    BOOL     shift, and go to state 10
    LPAREN   shift, and go to state 11
    MINUS    shift, and go to state 15
    NOT      shift, and go to state 16

    literal     go to state 18
    expression  go to state 68


State 62

   40 declaration_statement: VAR IDENT COLON type • ASSIGN expression

    ASSIGN  shift, and go to state 69


State 63

   41 print_statement: PRINT LPAREN expression RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 70


State 64

    9 param: IDENT COLON • type

    T_INTEGER  shift, and go to state 40
    T_CHAR     shift, and go to state 41
    T_STRING   shift, and go to state 42
    T_DOUBLE   shift, and go to state 43
    T_BOOL     shift, and go to state 44
    T_VOID     shift, and go to state 45

    type  go to state 71


State 65

   10 param: VAR IDENT • COLON type

    COLON  shift, and go to state 72


State 66

    3 function: FUNC IDENT LPAREN params RPAREN • LCURLY statements RCURLY
    4         | FUNC IDENT LPAREN params RPAREN • COLON type LCURLY statements RCURLY

    LCURLY  shift, and go to state 73
    COLON   shift, and go to state 74


State 67

    8 param_list: param_list COMMA • param

    IDENT  shift, and go to state 56
    VAR    shift, and go to state 57

    param  go to state 75


State 68

   26 expression: expression • PLUS expression
   27           | expression • MINUS expression
   28           | expression • MULTIPLY expression
   29           | expression • DIVIDE expression
   39 declaration_statement: IDENT COLON type ASSIGN expression •

    PLUS      shift, and go to state 34
    MINUS     shift, and go to state 35
    MULTIPLY  shift, and go to state 36
    DIVIDE    shift, and go to state 37

    $default  reduce using rule 39 (declaration_statement)


State 69

   40 declaration_statement: VAR IDENT COLON type ASSIGN • expression

    IDENT    shift, and go to state 26
    INTEGER  shift, and go to state 6
    DOUBLE   shift, and go to state 7
    CHAR     shift, and go to state 8
    STRING   shift, and go to state 9
    BOOL     shift, and go to state 10
    LPAREN   shift, and go to state 11
    MINUS    shift, and go to state 15
    NOT      shift, and go to state 16

    literal     go to state 18
    expression  go to state 76


State 70

   41 print_statement: PRINT LPAREN expression RPAREN SEMICOLON •

    $default  reduce using rule 41 (print_statement)


State 71

    9 param: IDENT COLON type •

    $default  reduce using rule 9 (param)


State 72

   10 param: VAR IDENT COLON • type

    T_INTEGER  shift, and go to state 40
    T_CHAR     shift, and go to state 41
    T_STRING   shift, and go to state 42
    T_DOUBLE   shift, and go to state 43
    T_BOOL     shift, and go to state 44
    T_VOID     shift, and go to state 45

    type  go to state 77


State 73

    3 function: FUNC IDENT LPAREN params RPAREN LCURLY • statements RCURLY

    $default  reduce using rule 32 (statements)

    statements  go to state 78


State 74

    4 function: FUNC IDENT LPAREN params RPAREN COLON • type LCURLY statements RCURLY

    T_INTEGER  shift, and go to state 40
    T_CHAR     shift, and go to state 41
    T_STRING   shift, and go to state 42
    T_DOUBLE   shift, and go to state 43
    T_BOOL     shift, and go to state 44
    T_VOID     shift, and go to state 45

    type  go to state 79


State 75

    8 param_list: param_list COMMA param •

    $default  reduce using rule 8 (param_list)


State 76

   26 expression: expression • PLUS expression
   27           | expression • MINUS expression
   28           | expression • MULTIPLY expression
   29           | expression • DIVIDE expression
   40 declaration_statement: VAR IDENT COLON type ASSIGN expression •

    PLUS      shift, and go to state 34
    MINUS     shift, and go to state 35
    MULTIPLY  shift, and go to state 36
    DIVIDE    shift, and go to state 37

    $default  reduce using rule 40 (declaration_statement)


State 77

   10 param: VAR IDENT COLON type •

    $default  reduce using rule 10 (param)


State 78

    3 function: FUNC IDENT LPAREN params RPAREN LCURLY statements • RCURLY
   33 statements: statements • statement

    FUNC     shift, and go to state 4
    IDENT    shift, and go to state 5
    INTEGER  shift, and go to state 6
    DOUBLE   shift, and go to state 7
    CHAR     shift, and go to state 8
    STRING   shift, and go to state 9
    BOOL     shift, and go to state 10
    LPAREN   shift, and go to state 11
    LCURLY   shift, and go to state 12
    RCURLY   shift, and go to state 80
    VAR      shift, and go to state 13
    PRINT    shift, and go to state 14
    MINUS    shift, and go to state 15
    NOT      shift, and go to state 16

    function               go to state 17
    literal                go to state 18
    expression             go to state 19
    statement              go to state 20
    declaration_statement  go to state 21
    print_statement        go to state 22


State 79

    4 function: FUNC IDENT LPAREN params RPAREN COLON type • LCURLY statements RCURLY

    LCURLY  shift, and go to state 81


State 80

    3 function: FUNC IDENT LPAREN params RPAREN LCURLY statements RCURLY •

    $default  reduce using rule 3 (function)


State 81

    4 function: FUNC IDENT LPAREN params RPAREN COLON type LCURLY • statements RCURLY

    $default  reduce using rule 32 (statements)

    statements  go to state 82


State 82

    4 function: FUNC IDENT LPAREN params RPAREN COLON type LCURLY statements • RCURLY
   33 statements: statements • statement

    FUNC     shift, and go to state 4
    IDENT    shift, and go to state 5
    INTEGER  shift, and go to state 6
    DOUBLE   shift, and go to state 7
    CHAR     shift, and go to state 8
    STRING   shift, and go to state 9
    BOOL     shift, and go to state 10
    LPAREN   shift, and go to state 11
    LCURLY   shift, and go to state 12
    RCURLY   shift, and go to state 83
    VAR      shift, and go to state 13
    PRINT    shift, and go to state 14
    MINUS    shift, and go to state 15
    NOT      shift, and go to state 16

    function               go to state 17
    literal                go to state 18
    expression             go to state 19
    statement              go to state 20
    declaration_statement  go to state 21
    print_statement        go to state 22


State 83

    4 function: FUNC IDENT LPAREN params RPAREN COLON type LCURLY statements RCURLY •

    $default  reduce using rule 4 (function)
