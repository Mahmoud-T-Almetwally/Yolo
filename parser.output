Terminals unused in grammar

    T_FLOAT
    LBRACKET
    RBRACKET
    DOT
    IF
    ELSE
    WHILE
    FOR
    RETURN
    OR
    AND
    EQ
    NEQ
    LT
    GT
    LTE
    GTE
    INC
    DEC
    NOT
    POWER


State 0 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: ε
    2        | statements

    3 function: FUNC IDENT LPAREN params RPAREN LCURLY statements RCURLY
    4         | FUNC IDENT LPAREN params RPAREN COLON type LCURLY statements RCURLY

    5 params: ε
    6       | param
    7       | params COMMA param

    8 param: IDENT COLON type
    9      | VAR IDENT COLON type

   10 type: T_INTEGER
   11     | T_DOUBLE
   12     | T_CHAR
   13     | T_STRING
   14     | T_BOOL
   15     | T_VOID

   16 expression: IDENT
   17           | IDENT COLON type ASSIGN expression
   18           | VAR IDENT COLON type ASSIGN expression
   19           | IDENT ASSIGN expression
   20           | INTEGER
   21           | DOUBLE
   22           | CHAR
   23           | STRING
   24           | BOOL
   25           | LPAREN expression RPAREN
   26           | expression PLUS expression
   27           | expression MINUS expression
   28           | expression MULTIPLY expression
   29           | expression DIVIDE expression
   30           | UNARY_MINUS expression

   31 statements: ε
   32           | statements statement

   33 statement: expression SEMICOLON
   34          | function
   35          | print_statement
   36          | LCURLY statements RCURLY

   37 print_statement: PRINT LPAREN expression RPAREN SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    FUNC (258) 3 4
    IDENT <string_val> (259) 3 4 8 9 16 17 18 19
    INTEGER <int_val> (260) 20
    DOUBLE <double_val> (261) 21
    CHAR <char_val> (262) 22
    STRING <string_val> (263) 23
    BOOL <bool_val> (264) 24
    T_INTEGER (265) 10
    T_FLOAT (266)
    T_CHAR (267) 12
    T_STRING (268) 13
    T_DOUBLE (269) 11
    T_BOOL (270) 14
    T_VOID (271) 15
    LPAREN (272) 3 4 25 37
    RPAREN (273) 3 4 25 37
    LCURLY (274) 3 4 36
    RCURLY (275) 3 4 36
    LBRACKET (276)
    RBRACKET (277)
    DOT (278)
    SEMICOLON (279) 33 37
    COLON (280) 4 8 9 17 18
    COMMA (281) 7
    VAR (282) 9 18
    IF (283)
    ELSE (284)
    WHILE (285)
    FOR (286)
    PRINT (287) 37
    RETURN (288)
    ASSIGN (289) 17 18 19
    OR (290)
    AND (291)
    EQ (292)
    NEQ (293)
    LT (294)
    GT (295)
    LTE (296)
    GTE (297)
    PLUS (298) 26
    MINUS (299) 27
    MULTIPLY (300) 28
    DIVIDE (301) 29
    INC (302)
    DEC (303)
    NOT (304)
    POWER (305)
    UNARY_MINUS (306) 30
    NEG (307)


Nonterminals, with rules where they appear

    $accept (53)
        on left: 0
    program (54)
        on left: 1 2
        on right: 0
    function <void> (55)
        on left: 3 4
        on right: 34
    params <void> (56)
        on left: 5 6 7
        on right: 3 4 7
    param <void> (57)
        on left: 8 9
        on right: 6 7
    type <type_val> (58)
        on left: 10 11 12 13 14 15
        on right: 4 8 9 17 18
    expression <sym_ptr> (59)
        on left: 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
        on right: 17 18 19 25 26 27 28 29 30 33 37
    statements <void> (60)
        on left: 31 32
        on right: 2 3 4 32 36
    statement <void> (61)
        on left: 33 34 35 36
        on right: 32
    print_statement (62)
        on left: 37
        on right: 35


State 0

    0 $accept: • program $end

    $end      reduce using rule 1 (program)
    $end      [reduce using rule 31 (statements)]
    $default  reduce using rule 31 (statements)

    program     go to state 1
    statements  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    2 program: statements •
   32 statements: statements • statement

    FUNC         shift, and go to state 4
    IDENT        shift, and go to state 5
    INTEGER      shift, and go to state 6
    DOUBLE       shift, and go to state 7
    CHAR         shift, and go to state 8
    STRING       shift, and go to state 9
    BOOL         shift, and go to state 10
    LPAREN       shift, and go to state 11
    LCURLY       shift, and go to state 12
    VAR          shift, and go to state 13
    PRINT        shift, and go to state 14
    UNARY_MINUS  shift, and go to state 15

    $default  reduce using rule 2 (program)

    function         go to state 16
    expression       go to state 17
    statement        go to state 18
    print_statement  go to state 19


State 3

    0 $accept: program $end •

    $default  accept


State 4

    3 function: FUNC • IDENT LPAREN params RPAREN LCURLY statements RCURLY
    4         | FUNC • IDENT LPAREN params RPAREN COLON type LCURLY statements RCURLY

    IDENT  shift, and go to state 20


State 5

   16 expression: IDENT •
   17           | IDENT • COLON type ASSIGN expression
   19           | IDENT • ASSIGN expression

    COLON   shift, and go to state 21
    ASSIGN  shift, and go to state 22

    $default  reduce using rule 16 (expression)


State 6

   20 expression: INTEGER •

    $default  reduce using rule 20 (expression)


State 7

   21 expression: DOUBLE •

    $default  reduce using rule 21 (expression)


State 8

   22 expression: CHAR •

    $default  reduce using rule 22 (expression)


State 9

   23 expression: STRING •

    $default  reduce using rule 23 (expression)


State 10

   24 expression: BOOL •

    $default  reduce using rule 24 (expression)


State 11

   25 expression: LPAREN • expression RPAREN

    IDENT        shift, and go to state 5
    INTEGER      shift, and go to state 6
    DOUBLE       shift, and go to state 7
    CHAR         shift, and go to state 8
    STRING       shift, and go to state 9
    BOOL         shift, and go to state 10
    LPAREN       shift, and go to state 11
    VAR          shift, and go to state 13
    UNARY_MINUS  shift, and go to state 15

    expression  go to state 23


State 12

   36 statement: LCURLY • statements RCURLY

    $default  reduce using rule 31 (statements)

    statements  go to state 24


State 13

   18 expression: VAR • IDENT COLON type ASSIGN expression

    IDENT  shift, and go to state 25


State 14

   37 print_statement: PRINT • LPAREN expression RPAREN SEMICOLON

    LPAREN  shift, and go to state 26


State 15

   30 expression: UNARY_MINUS • expression

    IDENT        shift, and go to state 5
    INTEGER      shift, and go to state 6
    DOUBLE       shift, and go to state 7
    CHAR         shift, and go to state 8
    STRING       shift, and go to state 9
    BOOL         shift, and go to state 10
    LPAREN       shift, and go to state 11
    VAR          shift, and go to state 13
    UNARY_MINUS  shift, and go to state 15

    expression  go to state 27


State 16

   34 statement: function •

    $default  reduce using rule 34 (statement)


State 17

   26 expression: expression • PLUS expression
   27           | expression • MINUS expression
   28           | expression • MULTIPLY expression
   29           | expression • DIVIDE expression
   33 statement: expression • SEMICOLON

    SEMICOLON  shift, and go to state 28
    PLUS       shift, and go to state 29
    MINUS      shift, and go to state 30
    MULTIPLY   shift, and go to state 31
    DIVIDE     shift, and go to state 32


State 18

   32 statements: statements statement •

    $default  reduce using rule 32 (statements)


State 19

   35 statement: print_statement •

    $default  reduce using rule 35 (statement)


State 20

    3 function: FUNC IDENT • LPAREN params RPAREN LCURLY statements RCURLY
    4         | FUNC IDENT • LPAREN params RPAREN COLON type LCURLY statements RCURLY

    LPAREN  shift, and go to state 33


State 21

   17 expression: IDENT COLON • type ASSIGN expression

    T_INTEGER  shift, and go to state 34
    T_CHAR     shift, and go to state 35
    T_STRING   shift, and go to state 36
    T_DOUBLE   shift, and go to state 37
    T_BOOL     shift, and go to state 38
    T_VOID     shift, and go to state 39

    type  go to state 40


State 22

   19 expression: IDENT ASSIGN • expression

    IDENT        shift, and go to state 5
    INTEGER      shift, and go to state 6
    DOUBLE       shift, and go to state 7
    CHAR         shift, and go to state 8
    STRING       shift, and go to state 9
    BOOL         shift, and go to state 10
    LPAREN       shift, and go to state 11
    VAR          shift, and go to state 13
    UNARY_MINUS  shift, and go to state 15

    expression  go to state 41


State 23

   25 expression: LPAREN expression • RPAREN
   26           | expression • PLUS expression
   27           | expression • MINUS expression
   28           | expression • MULTIPLY expression
   29           | expression • DIVIDE expression

    RPAREN    shift, and go to state 42
    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    MULTIPLY  shift, and go to state 31
    DIVIDE    shift, and go to state 32


State 24

   32 statements: statements • statement
   36 statement: LCURLY statements • RCURLY

    FUNC         shift, and go to state 4
    IDENT        shift, and go to state 5
    INTEGER      shift, and go to state 6
    DOUBLE       shift, and go to state 7
    CHAR         shift, and go to state 8
    STRING       shift, and go to state 9
    BOOL         shift, and go to state 10
    LPAREN       shift, and go to state 11
    LCURLY       shift, and go to state 12
    RCURLY       shift, and go to state 43
    VAR          shift, and go to state 13
    PRINT        shift, and go to state 14
    UNARY_MINUS  shift, and go to state 15

    function         go to state 16
    expression       go to state 17
    statement        go to state 18
    print_statement  go to state 19


State 25

   18 expression: VAR IDENT • COLON type ASSIGN expression

    COLON  shift, and go to state 44


State 26

   37 print_statement: PRINT LPAREN • expression RPAREN SEMICOLON

    IDENT        shift, and go to state 5
    INTEGER      shift, and go to state 6
    DOUBLE       shift, and go to state 7
    CHAR         shift, and go to state 8
    STRING       shift, and go to state 9
    BOOL         shift, and go to state 10
    LPAREN       shift, and go to state 11
    VAR          shift, and go to state 13
    UNARY_MINUS  shift, and go to state 15

    expression  go to state 45


State 27

   26 expression: expression • PLUS expression
   27           | expression • MINUS expression
   28           | expression • MULTIPLY expression
   29           | expression • DIVIDE expression
   30           | UNARY_MINUS expression •

    $default  reduce using rule 30 (expression)


State 28

   33 statement: expression SEMICOLON •

    $default  reduce using rule 33 (statement)


State 29

   26 expression: expression PLUS • expression

    IDENT        shift, and go to state 5
    INTEGER      shift, and go to state 6
    DOUBLE       shift, and go to state 7
    CHAR         shift, and go to state 8
    STRING       shift, and go to state 9
    BOOL         shift, and go to state 10
    LPAREN       shift, and go to state 11
    VAR          shift, and go to state 13
    UNARY_MINUS  shift, and go to state 15

    expression  go to state 46


State 30

   27 expression: expression MINUS • expression

    IDENT        shift, and go to state 5
    INTEGER      shift, and go to state 6
    DOUBLE       shift, and go to state 7
    CHAR         shift, and go to state 8
    STRING       shift, and go to state 9
    BOOL         shift, and go to state 10
    LPAREN       shift, and go to state 11
    VAR          shift, and go to state 13
    UNARY_MINUS  shift, and go to state 15

    expression  go to state 47


State 31

   28 expression: expression MULTIPLY • expression

    IDENT        shift, and go to state 5
    INTEGER      shift, and go to state 6
    DOUBLE       shift, and go to state 7
    CHAR         shift, and go to state 8
    STRING       shift, and go to state 9
    BOOL         shift, and go to state 10
    LPAREN       shift, and go to state 11
    VAR          shift, and go to state 13
    UNARY_MINUS  shift, and go to state 15

    expression  go to state 48


State 32

   29 expression: expression DIVIDE • expression

    IDENT        shift, and go to state 5
    INTEGER      shift, and go to state 6
    DOUBLE       shift, and go to state 7
    CHAR         shift, and go to state 8
    STRING       shift, and go to state 9
    BOOL         shift, and go to state 10
    LPAREN       shift, and go to state 11
    VAR          shift, and go to state 13
    UNARY_MINUS  shift, and go to state 15

    expression  go to state 49


State 33

    3 function: FUNC IDENT LPAREN • params RPAREN LCURLY statements RCURLY
    4         | FUNC IDENT LPAREN • params RPAREN COLON type LCURLY statements RCURLY

    IDENT  shift, and go to state 50
    VAR    shift, and go to state 51

    $default  reduce using rule 5 (params)

    params  go to state 52
    param   go to state 53


State 34

   10 type: T_INTEGER •

    $default  reduce using rule 10 (type)


State 35

   12 type: T_CHAR •

    $default  reduce using rule 12 (type)


State 36

   13 type: T_STRING •

    $default  reduce using rule 13 (type)


State 37

   11 type: T_DOUBLE •

    $default  reduce using rule 11 (type)


State 38

   14 type: T_BOOL •

    $default  reduce using rule 14 (type)


State 39

   15 type: T_VOID •

    $default  reduce using rule 15 (type)


State 40

   17 expression: IDENT COLON type • ASSIGN expression

    ASSIGN  shift, and go to state 54


State 41

   19 expression: IDENT ASSIGN expression •
   26           | expression • PLUS expression
   27           | expression • MINUS expression
   28           | expression • MULTIPLY expression
   29           | expression • DIVIDE expression

    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    MULTIPLY  shift, and go to state 31
    DIVIDE    shift, and go to state 32

    $default  reduce using rule 19 (expression)


State 42

   25 expression: LPAREN expression RPAREN •

    $default  reduce using rule 25 (expression)


State 43

   36 statement: LCURLY statements RCURLY •

    $default  reduce using rule 36 (statement)


State 44

   18 expression: VAR IDENT COLON • type ASSIGN expression

    T_INTEGER  shift, and go to state 34
    T_CHAR     shift, and go to state 35
    T_STRING   shift, and go to state 36
    T_DOUBLE   shift, and go to state 37
    T_BOOL     shift, and go to state 38
    T_VOID     shift, and go to state 39

    type  go to state 55


State 45

   26 expression: expression • PLUS expression
   27           | expression • MINUS expression
   28           | expression • MULTIPLY expression
   29           | expression • DIVIDE expression
   37 print_statement: PRINT LPAREN expression • RPAREN SEMICOLON

    RPAREN    shift, and go to state 56
    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    MULTIPLY  shift, and go to state 31
    DIVIDE    shift, and go to state 32


State 46

   26 expression: expression • PLUS expression
   26           | expression PLUS expression •
   27           | expression • MINUS expression
   28           | expression • MULTIPLY expression
   29           | expression • DIVIDE expression

    MULTIPLY  shift, and go to state 31
    DIVIDE    shift, and go to state 32

    $default  reduce using rule 26 (expression)


State 47

   26 expression: expression • PLUS expression
   27           | expression • MINUS expression
   27           | expression MINUS expression •
   28           | expression • MULTIPLY expression
   29           | expression • DIVIDE expression

    MULTIPLY  shift, and go to state 31
    DIVIDE    shift, and go to state 32

    $default  reduce using rule 27 (expression)


State 48

   26 expression: expression • PLUS expression
   27           | expression • MINUS expression
   28           | expression • MULTIPLY expression
   28           | expression MULTIPLY expression •
   29           | expression • DIVIDE expression

    $default  reduce using rule 28 (expression)


State 49

   26 expression: expression • PLUS expression
   27           | expression • MINUS expression
   28           | expression • MULTIPLY expression
   29           | expression • DIVIDE expression
   29           | expression DIVIDE expression •

    $default  reduce using rule 29 (expression)


State 50

    8 param: IDENT • COLON type

    COLON  shift, and go to state 57


State 51

    9 param: VAR • IDENT COLON type

    IDENT  shift, and go to state 58


State 52

    3 function: FUNC IDENT LPAREN params • RPAREN LCURLY statements RCURLY
    4         | FUNC IDENT LPAREN params • RPAREN COLON type LCURLY statements RCURLY
    7 params: params • COMMA param

    RPAREN  shift, and go to state 59
    COMMA   shift, and go to state 60


State 53

    6 params: param •

    $default  reduce using rule 6 (params)


State 54

   17 expression: IDENT COLON type ASSIGN • expression

    IDENT        shift, and go to state 5
    INTEGER      shift, and go to state 6
    DOUBLE       shift, and go to state 7
    CHAR         shift, and go to state 8
    STRING       shift, and go to state 9
    BOOL         shift, and go to state 10
    LPAREN       shift, and go to state 11
    VAR          shift, and go to state 13
    UNARY_MINUS  shift, and go to state 15

    expression  go to state 61


State 55

   18 expression: VAR IDENT COLON type • ASSIGN expression

    ASSIGN  shift, and go to state 62


State 56

   37 print_statement: PRINT LPAREN expression RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 63


State 57

    8 param: IDENT COLON • type

    T_INTEGER  shift, and go to state 34
    T_CHAR     shift, and go to state 35
    T_STRING   shift, and go to state 36
    T_DOUBLE   shift, and go to state 37
    T_BOOL     shift, and go to state 38
    T_VOID     shift, and go to state 39

    type  go to state 64


State 58

    9 param: VAR IDENT • COLON type

    COLON  shift, and go to state 65


State 59

    3 function: FUNC IDENT LPAREN params RPAREN • LCURLY statements RCURLY
    4         | FUNC IDENT LPAREN params RPAREN • COLON type LCURLY statements RCURLY

    LCURLY  shift, and go to state 66
    COLON   shift, and go to state 67


State 60

    7 params: params COMMA • param

    IDENT  shift, and go to state 50
    VAR    shift, and go to state 51

    param  go to state 68


State 61

   17 expression: IDENT COLON type ASSIGN expression •
   26           | expression • PLUS expression
   27           | expression • MINUS expression
   28           | expression • MULTIPLY expression
   29           | expression • DIVIDE expression

    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    MULTIPLY  shift, and go to state 31
    DIVIDE    shift, and go to state 32

    $default  reduce using rule 17 (expression)


State 62

   18 expression: VAR IDENT COLON type ASSIGN • expression

    IDENT        shift, and go to state 5
    INTEGER      shift, and go to state 6
    DOUBLE       shift, and go to state 7
    CHAR         shift, and go to state 8
    STRING       shift, and go to state 9
    BOOL         shift, and go to state 10
    LPAREN       shift, and go to state 11
    VAR          shift, and go to state 13
    UNARY_MINUS  shift, and go to state 15

    expression  go to state 69


State 63

   37 print_statement: PRINT LPAREN expression RPAREN SEMICOLON •

    $default  reduce using rule 37 (print_statement)


State 64

    8 param: IDENT COLON type •

    $default  reduce using rule 8 (param)


State 65

    9 param: VAR IDENT COLON • type

    T_INTEGER  shift, and go to state 34
    T_CHAR     shift, and go to state 35
    T_STRING   shift, and go to state 36
    T_DOUBLE   shift, and go to state 37
    T_BOOL     shift, and go to state 38
    T_VOID     shift, and go to state 39

    type  go to state 70


State 66

    3 function: FUNC IDENT LPAREN params RPAREN LCURLY • statements RCURLY

    $default  reduce using rule 31 (statements)

    statements  go to state 71


State 67

    4 function: FUNC IDENT LPAREN params RPAREN COLON • type LCURLY statements RCURLY

    T_INTEGER  shift, and go to state 34
    T_CHAR     shift, and go to state 35
    T_STRING   shift, and go to state 36
    T_DOUBLE   shift, and go to state 37
    T_BOOL     shift, and go to state 38
    T_VOID     shift, and go to state 39

    type  go to state 72


State 68

    7 params: params COMMA param •

    $default  reduce using rule 7 (params)


State 69

   18 expression: VAR IDENT COLON type ASSIGN expression •
   26           | expression • PLUS expression
   27           | expression • MINUS expression
   28           | expression • MULTIPLY expression
   29           | expression • DIVIDE expression

    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    MULTIPLY  shift, and go to state 31
    DIVIDE    shift, and go to state 32

    $default  reduce using rule 18 (expression)


State 70

    9 param: VAR IDENT COLON type •

    $default  reduce using rule 9 (param)


State 71

    3 function: FUNC IDENT LPAREN params RPAREN LCURLY statements • RCURLY
   32 statements: statements • statement

    FUNC         shift, and go to state 4
    IDENT        shift, and go to state 5
    INTEGER      shift, and go to state 6
    DOUBLE       shift, and go to state 7
    CHAR         shift, and go to state 8
    STRING       shift, and go to state 9
    BOOL         shift, and go to state 10
    LPAREN       shift, and go to state 11
    LCURLY       shift, and go to state 12
    RCURLY       shift, and go to state 73
    VAR          shift, and go to state 13
    PRINT        shift, and go to state 14
    UNARY_MINUS  shift, and go to state 15

    function         go to state 16
    expression       go to state 17
    statement        go to state 18
    print_statement  go to state 19


State 72

    4 function: FUNC IDENT LPAREN params RPAREN COLON type • LCURLY statements RCURLY

    LCURLY  shift, and go to state 74


State 73

    3 function: FUNC IDENT LPAREN params RPAREN LCURLY statements RCURLY •

    $default  reduce using rule 3 (function)


State 74

    4 function: FUNC IDENT LPAREN params RPAREN COLON type LCURLY • statements RCURLY

    $default  reduce using rule 31 (statements)

    statements  go to state 75


State 75

    4 function: FUNC IDENT LPAREN params RPAREN COLON type LCURLY statements • RCURLY
   32 statements: statements • statement

    FUNC         shift, and go to state 4
    IDENT        shift, and go to state 5
    INTEGER      shift, and go to state 6
    DOUBLE       shift, and go to state 7
    CHAR         shift, and go to state 8
    STRING       shift, and go to state 9
    BOOL         shift, and go to state 10
    LPAREN       shift, and go to state 11
    LCURLY       shift, and go to state 12
    RCURLY       shift, and go to state 76
    VAR          shift, and go to state 13
    PRINT        shift, and go to state 14
    UNARY_MINUS  shift, and go to state 15

    function         go to state 16
    expression       go to state 17
    statement        go to state 18
    print_statement  go to state 19


State 76

    4 function: FUNC IDENT LPAREN params RPAREN COLON type LCURLY statements RCURLY •

    $default  reduce using rule 4 (function)
